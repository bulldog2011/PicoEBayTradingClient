// Generated by xsd compiler for ios/objective-c
// DO NOT CHANGE!

#import <Foundation/Foundation.h>
#import "PicoClassSchema.h"
#import "PicoPropertySchema.h"
#import "PicoConstants.h"
#import "PicoBindable.h"
#import "Trading_AbstractResponseType.h"


@class Trading_TransactionArrayType;
@class Trading_UserType;
@class Trading_PaginationResultType;

/**
 
 Returns an array of order line item (transaction) data for the seller specified in the request.
 The results can be used to create a report of data that is commonly
 necessary for order processing.
 Zero, one, or many <b>Transaction</b> objects can be returned in the <b>TransactionArray</b>.
 The set of order line items returned is limited to those that were modified between
 the times specified in the request's <b>ModTimeFrom</b> and <b>ModTimeTo</b> filters.
 The order line items returned are sorted by <b>Transaction.Status.LastTimeModified</b>,
 ascending order (that is, order line items that more recently were modified are returned last).
 Also returns information about the seller whose order line items were requested.
 If pagination filters were specified in the request, returns meta-data describing
 the effects of those filters on the current response and the estimated effects if
 the same filters are used in subsequent calls.
 
 
 @ingroup EBayAPIInterface
*/
@interface Trading_GetSellerTransactionsResponseType : Trading_AbstractResponseType {

@private
    Trading_PaginationResultType *_paginationResult;
    NSNumber *_hasMoreTransactions;
    NSNumber *_transactionsPerPage;
    NSNumber *_pageNumber;
    NSNumber *_returnedTransactionCountActual;
    Trading_UserType *_seller;
    Trading_TransactionArrayType *_transactionArray;
    NSNumber *_payPalPreferred;

}


/**
 
 Container consisting of the total number of order line items that match the input
 criteria and the total number of pages that must be scrolled through to view all order
 line items. To scroll through each page of order line item data, make subsequent
 <b>GetSellerTransactions</b> calls, incrementing the <b>Pagination.PageNumber</b>
 field by a value of '1' each time.
 
 
 type : class Trading_PaginationResultType
*/
@property (nonatomic, retain) Trading_PaginationResultType *paginationResult;

/**
 
 This flag indicates whether there are additional pages of order line items to view.
 This field will be returned as 'true' if there are additional pages or order line items
 to view, or 'false' if the current page of order line item data is the last page of
 data.
 
 
 type : NSNumber, wrapper for primitive bool
*/
@property (nonatomic, retain) NSNumber *hasMoreTransactions;

/**
 
 This value indicates the number of order line items returned per page (per call) and is
 controlled by the <b>Pagination.EntriesPerPage</b> value passed in the call
 request. Unless it is the last (or possibly only) page of data (<b>HasMoreTransactions=false</b>),
 the <b>TransactionsPerPage</b> value should equal the
 <b>Pagination.EntriesPerPage</b> value passed in the call request.
 <br>
 <br>
 <span class="tablenote"><b>Note:</b>
 Due to the fact that item data on the eBay platform has a shorter retention period than
 order data, it is possible that some retrieved pages will contain no data. For pages
 that contain no data, the <b>ReturnedTransactionCountActual</b> value will
 be '0'. It is also possible that pages 2, 3, and 4 have no data, but pages 1 and 5 do
 have data. Therefore, we recommend that you scroll through each page of data (making
 subsequent <b>GetSellerTransactions</b> calls and incrementing the
 <b>Pagination.PageNumber</b> value by '1' each time) until you reach the
 last page, indicated by <b>HasMoreTransactions=false</b>.
 </span>
 
 
 type : NSNumber, wrapper for primitive int
*/
@property (nonatomic, retain) NSNumber *transactionsPerPage;

/**
 
 This value indicates the page number of retrieved order line items that match the input
 criteria. This value is controlled by the <b>Pagination.PageNumber</b>
 value passed in the call request. To scroll through all pages of order line items that match the
 input criteria, you increment the <b>Pagination.PageNumber</b> value by '1'
 with each subsequent <b>GetSellerTransactions</b> call.
 
 
 type : NSNumber, wrapper for primitive int
*/
@property (nonatomic, retain) NSNumber *pageNumber;

/**
 
 This value indicates the total number of (non-empty) order line items retrieved in the
 current page of results. The <b>ReturnedTransactionCountActual</b> value
 will be lower than the <b>TransactionsPerPage</b> value if one or more
 empty order line items are retreived on the page.
 <br>
 <br>
 <span class="tablenote"><b>Note:</b>
 Due to the fact that item data on the eBay platform has a shorter retention period than
 order data, it is possible that some retrieved pages will contain no data. For pages
 that contain no order line item data, the <b>ReturnedTransactionCountActual</b> value will
 be '0'. It is also possible that pages 2, 3, and 4 have no data, but pages 1 and 5 do
 have data. Therefore, we recommend that you scroll through each page of data (making
 subsequent <b>GetSellerTransactions</b> calls and incrementing the
 <b>Pagination.PageNumber</b> value by '1' each time) until you reach the
 last page, indicated by <b>HasMoreTransactions=false</b>.
 </span>
 
 
 type : NSNumber, wrapper for primitive int
*/
@property (nonatomic, retain) NSNumber *returnedTransactionCountActual;

/**
 
 Contains information about the seller whose order line items are being returned.
 See the reference guide for information about the <b>Seller</b> object fields
 that are returned.
 
 
 type : class Trading_UserType
*/
@property (nonatomic, retain) Trading_UserType *seller;

/**
 
 List of <b>Transaction</b> objects representing the seller's recent sales.
 Each <b>Transaction</b> object contains the data for one purchase
 (of one or more items in the same listing).
 See the reference guide for more information about the fields that are returned
 for each order line item.
 
 
 type : class Trading_TransactionArrayType
*/
@property (nonatomic, retain) Trading_TransactionArrayType *transactionArray;

/**
 
 Indicates whether the seller has the preference enabled that shows that the seller
 prefers PayPal as the method of payment for an item. This preference is indicated on
 an item's View Item page and is intended to influence a buyer to use PayPal
 to pay for the item.
 
 
 type : NSNumber, wrapper for primitive bool
*/
@property (nonatomic, retain) NSNumber *payPalPreferred;


@end
