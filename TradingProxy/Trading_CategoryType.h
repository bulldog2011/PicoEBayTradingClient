// Generated by xsd compiler for ios/objective-c
// DO NOT CHANGE!

#import <Foundation/Foundation.h>
#import "PicoClassSchema.h"
#import "PicoPropertySchema.h"
#import "PicoConstants.h"
#import "PicoBindable.h"


@class Trading_CharacteristicsSetType;
@class Trading_ExtendedProductFinderIDType;

/**
 
         Container for data on one listing category.
 
 
 @ingroup EBayAPIInterface
*/
@interface Trading_CategoryType : NSObject <PicoBindable> {

@private
    NSNumber *_bestOfferEnabled;
    NSNumber *_autoPayEnabled;
    NSNumber *_b2BVATEnabled;
    NSNumber *_catalogEnabled;
    NSString *_categoryID;
    NSNumber *_categoryLevel;
    NSString *_categoryName;
    NSMutableArray *_categoryParentID;
    NSMutableArray *_categoryParentName;
    NSNumber *_productSearchPageAvailable;
    NSMutableArray *_productFinderIDs;
    NSMutableArray *_characteristicsSets;
    NSNumber *_expired;
    NSNumber *_intlAutosFixedCat;
    NSNumber *_leafCategory;
    NSNumber *_virtual;
    NSNumber *_numOfItems;
    NSNumber *_sellerGuaranteeEligible;
    NSNumber *_orpa;
    NSNumber *_orra;
    NSNumber *_lsd;
    NSString *_keywords;
    NSMutableArray *_any;

}


/**
 
 If true, the category supports Best Offers.
 If not present, the category does not support Best Offers.
 Will not be returned if false.
 
 
 type : NSNumber, wrapper for primitive bool
*/
@property (nonatomic, retain) NSNumber *bestOfferEnabled;

/**
 
 If true, indicates that the category supports immediate payment.
 If not present, the category does not support
 immediate payment. Will not be returned if false.
 
 
 type : NSNumber, wrapper for primitive bool
*/
@property (nonatomic, retain) NSNumber *autoPayEnabled;

/**
 
 If true, the category supports business-to-business (B2B) VAT
 listings. Applicable to the eBay Germany (DE), Austria (AT),
 and Switzerland CH) sites only. If not present,
 the category does not support this feature. Will not be returned if false.
 
 
 type : NSNumber, wrapper for primitive bool
*/
@property (nonatomic, retain) NSNumber *b2BVATEnabled;

/**
 
 If true, the category supports catalog product details. Not returned if false.
 
 
 type : NSNumber, wrapper for primitive bool
*/
@property (nonatomic, retain) NSNumber *catalogEnabled;

/**
 
 Distinct numeric ID for a category on eBay.
 In GetItem and related calls, see CategoryName for the text name of
 the category. Use GetCategories to look up the category parent ID.<br>
 <br>
 For GetItem, Half.com items return the Half.com category ID
 in PrimaryCategory. This ID is not necessarily returned in
 GetCategories.
 
 
 type : NSString, wrapper for primitive string
*/
@property (nonatomic, retain) NSString *categoryID;

/**
 
 The level where the category fits in the site's category hierarchy.
 For example, if this field has a value of 2, then the category is two
 levels below the root category in the site's category hierarchy.
 
 
 type : NSNumber, wrapper for primitive int
*/
@property (nonatomic, retain) NSNumber *categoryLevel;

/**
 
 Display name of the category as it would appear on
 the eBay Web site.
 In GetItem, this is a fully qualified category name
 (e.g., Collectibles:Decorative Collectibles:Hummel, Goebel).<br>
 <br>
 In GetItem, always returned for eBay.com listings.
 Not returned in PrimaryCategory for Half.com listings.
 
 
 type : NSString, wrapper for primitive string
*/
@property (nonatomic, retain) NSString *categoryName;

/**
 
 Category ID identifying a category that is an ancestor of
 the category indicated in CategoryID.
 For GetCategories, returns the same value as CategoryID
 if the CategoryLevel is 1.
 For GetSuggestedCategories, multiple CategoryParentID fields
 can be returned in sequence, starting with the root category
 and ending with the category that is the direct parent of
 the category specified in CategoryID.
 Use these parent fields and the CategoryID field to build
 the fully qualified category browse path or "breadcrumbs"
 (e.g., 58058:3516:3517).
 
 
 entry type : NSString, wrapper for primitive string
*/

@property (nonatomic, retain) NSMutableArray *categoryParentID;

/**
 
 Display name of the category indicated in CategoryParentID.
 For GetSuggestedCategories, multiple CategoryParentName fields
 can be returned in sequence, starting with the root category
 and ending with the category that
 is the direct parent of the category specified in CategoryName.
 Use these parent fields and the CategoryName field to build the
 fully qualified category browse path or "breadcrumbs"
 (e.g., Computers & Networking > Technology Books > Certification).
 
 
 entry type : NSString, wrapper for primitive string
*/

@property (nonatomic, retain) NSMutableArray *categoryParentName;

/**
 
 No longer applicable to any category.
 
 
 type : NSNumber, wrapper for primitive bool
*/
@property (nonatomic, retain) NSNumber *productSearchPageAvailable;

/**
 
 No longer applicable to any category.
 
 
 entry type : class Trading_ExtendedProductFinderIDType
*/

@property (nonatomic, retain) NSMutableArray *productFinderIDs;

/**
 
 No longer applicable to any category.
 
 
 entry type : class Trading_CharacteristicsSetType
*/

@property (nonatomic, retain) NSMutableArray *characteristicsSets;

/**
 
 If true, indicates a category that has expired and
 to which items may not be listed. Will not be returned if false.
 
 
 type : NSNumber, wrapper for primitive bool
*/
@property (nonatomic, retain) NSNumber *expired;

/**
 
 If true, indicates that the category is a fixed-fee category. Use this
 information to identify categories are not eligible for eBay Stores Inventory
 format listings. You cannot list eBay Store Inventory format listings in
 fixed-fee categories on international sites. Output only. Will not be returned if false.
 
 
 type : NSNumber, wrapper for primitive bool
*/
@property (nonatomic, retain) NSNumber *intlAutosFixedCat;

/**
 
 If true, indicates that the category indicated in CategoryID is a leaf category,
 in which items may be listed (if the category is not also expired or virtual). Will not be returned if false.
 
 
 type : NSNumber, wrapper for primitive bool
*/
@property (nonatomic, retain) NSNumber *leafCategory;

/**
 
 If true, indicates the category indicated in CategoryID is a
 virtual category, to which items may not be listed. Will not be returned if false.
 
 
 type : NSNumber, wrapper for primitive bool
*/
@property (nonatomic, retain) NSNumber *virtual;

/**
 
 No longer applicable to any category.
 
 
 type : NSNumber, wrapper for primitive int
*/
@property (nonatomic, retain) NSNumber *numOfItems;

/**
 
 No longer supported.
 
 
 type : NSNumber, wrapper for primitive bool
*/
@property (nonatomic, retain) NSNumber *sellerGuaranteeEligible;

/**
 
 Indicates whether the category (and its subcategories)
 allows or disallows listing with a reserve price,
 depending on the prevailing site configuration indicated by
 ReservePriceAllowed.
 ORPA (override reserve price allowed) indicates when the category
 is an exception to the site's ReservePriceAllowed policy.<br>
 <br>
 If ORPA is true, the category overrides (toggles or reverses) the
 site's ReservePriceAllowed setting. In other words:<br>
 - If ReservePriceAllowed is true, reserve price is not allowed in this category.<br>
 - If ReservePriceAllowed is false, reserve price is allowed in this category.<br><br>
 If ORPA is not present, there is no override.
 That is, the category's setting is the same as the site's ReservePriceAllowed setting.<br>
 <br> This field will not be returned in the response if false.
 This toggling logic is designed to reduce the size of the GetCategories
 response by only returning ORPA when the category's policy is different
 from the site's policy. (If ORPA is true for a category, you can assume
 its subcategories inherit the same setting unless otherwise specified.)
 
 
 type : NSNumber, wrapper for primitive bool
*/
@property (nonatomic, retain) NSNumber *orpa;

/**
 
 Indicates whether the category (and its subcategories) allows
 or disallows reducing a listing's reserve price,
 depending on the prevailing site configuration indicated by ReduceReserveAllowed.
 ORRA (override reduce reserve allowed) indicates when the category is an exception
 to the site's ReduceReserveAllowed policy.<br><br>
 If ORRA is true, the category overrides (toggles or reverses) the
 site's ReduceReserveAllowed setting. In other words:<br>
 - If ReduceReserveAllowed is true, reserve price reduction is not allowed in this category.<br>
 - If ReduceReserveAllowed is false (because it is not present in the response), reserve price reduction is allowed in this category.<br><br>
 If ORRA is not present, there is no override. Will not be returned in the response if false.
 That is, the category's setting is the same as the site's ReduceReserveAllowed setting.<br>
 <br>
 This toggling logic is designed to reduce the size of the GetCategories
 response by only returning ORRA when the category's policy is different
 from the site's policy.  (If ORRA is true for a category, you can assume
 its subcategories inherit the same setting unless otherwise specified.)
 
 
 type : NSNumber, wrapper for primitive bool
*/
@property (nonatomic, retain) NSNumber *orra;

/**
 
 "Lot Size Disabled (LSD)" indicates that Item.LotSize is not permitted when you list in this category.
 If true, indicates that lot sizes are disabled in the specified category. Will not be returned if false.
 
 
 type : NSNumber, wrapper for primitive bool
*/
@property (nonatomic, retain) NSNumber *lsd;

/**
 
 The list of keywords returned.
 
 
 type : NSString, wrapper for primitive string
*/
@property (nonatomic, retain) NSString *keywords;

/**
 (public property)
 
 entry type : PicoAnyElement, wrapper for primitive anyelement
*/

@property (nonatomic, retain) NSMutableArray *any;


@end
