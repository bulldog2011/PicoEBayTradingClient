// Generated by xsd compiler for ios/objective-c
// DO NOT CHANGE!

#import <Foundation/Foundation.h>
#import "PicoClassSchema.h"
#import "PicoPropertySchema.h"
#import "PicoConstants.h"
#import "PicoBindable.h"


@class Trading_CharityAffiliationsType;
@class Trading_AddressType;
@class Trading_SellerType;
@class Trading_BiddingSummaryType;
@class Trading_BuyerType;

/**
 
 Type to contain the data for one eBay user. Depending on the context, the user
 might be the seller or the buyer on either side of an order, or the bidder or winning bidder
 in a listing. An object of this type is returned by a number of calls, including
 the GetUser call.
 
 
 @ingroup EBayAPIInterface
*/
@interface Trading_UserType : NSObject <PicoBindable> {

@private
    NSNumber *_aboutMePage;
    NSString *_eiasToken;
    NSString *_email;
    NSNumber *_feedbackScore;
    NSNumber *_uniqueNegativeFeedbackCount;
    NSNumber *_uniquePositiveFeedbackCount;
    NSNumber *_positiveFeedbackPercent;
    NSNumber *_feedbackPrivate;
    NSString *_feedbackRatingStar;
    NSNumber *_idVerified;
    NSNumber *_eBayGoodStanding;
    NSNumber *_newUser;
    Trading_AddressType *_registrationAddress;
    NSDate *_registrationDate;
    NSString *_site;
    NSString *_status;
    NSString *_userID;
    NSNumber *_userIDChanged;
    NSDate *_userIDLastChanged;
    NSString *_vatStatus;
    Trading_BuyerType *_buyerInfo;
    Trading_SellerType *_sellerInfo;
    NSString *_businessRole;
    Trading_CharityAffiliationsType *_charityAffiliations;
    NSString *_payPalAccountLevel;
    NSString *_payPalAccountType;
    NSString *_payPalAccountStatus;
    NSMutableArray *_userSubscription;
    NSNumber *_siteVerified;
    NSMutableArray *_skypeID;
    NSNumber *_eBayWikiReadOnly;
    NSNumber *_tuvLevel;
    NSString *_vatid;
    NSNumber *_motorsDealer;
    NSString *_sellerPaymentMethod;
    Trading_BiddingSummaryType *_biddingSummary;
    NSNumber *_userAnonymized;
    NSNumber *_uniqueNeutralFeedbackCount;
    NSNumber *_enterpriseSeller;
    NSString *_billingEmail;
    NSNumber *_qualifiesForSelling;
    NSString *_staticAlias;
    NSMutableArray *_any;

}


/**
 
 If true, indicates that the user has set up an About Me page.
 
 
 type : NSNumber, wrapper for primitive bool
*/
@property (nonatomic, retain) NSNumber *aboutMePage;

/**
 
 Unique identifier for the user that does not change when the eBay user name
 is changed. Use when an application needs to associate a new eBay user name
 with the corresponding eBay user.
 
 
 type : NSString, wrapper for primitive string
*/
@property (nonatomic, retain) NSString *eiasToken;

/**
 
 Email address for the user.
 Please see the links below to the topics related to anonymous user information
 and static email addresses.
 You cannot retrieve an email address for any user
 with whom you do not have an order relationship, regardless of site.
 An email address of another user is only returned
 if you and the other user are in an order relationship,
 within a certain time of order line item creation
 (although this limitation isn't applicable to the GetAllBidders call
 in the case of motor vehicles categories.)
 Based on Trust and Safety policies, the time is
 unspecified and can vary by site.
 <br><br>
 Since a bidder's user info is anonymous, this tag will be returned only to that
 bidder, and to the seller of an item that the user is bidding on.
 <br><br>
 For the order retrieval calls, the buyer's registration email address is only
 returned if the buyer is registered on the DE, AT, or CH sites, regardless of
 the seller's registration site and the site to which the seller sends the
 request.
 
 
 type : NSString, wrapper for primitive string
*/
@property (nonatomic, retain) NSString *email;

/**
 
 The aggregate feedback score for a user. A user's feedback score is the net
 positive feedback minus the net negative feedback left for the user.
 Feedback scores are a quantitative expression of the desirability of dealing
 with a user as a buyer or a seller in either side of an order. Each order line item can
 result in one feedback entry for a given user (the buyer can leave feedback
 for the seller, and the seller can leave feedback for the buyer.). That one
 feedback can be positive, negative, or neutral. The aggregated feedback
 counts for a particular user represent that user's overall feedback score
 (referred to as a "feedback rating" on the eBay site). If the user has
 chosen to make their feedback private and that user is not the user
 identified in the request's authentication token, FeedbackScore is not
 returned and FeedbackPrivate is returned with a value of true.<br>
 <br>
 In GetMyeBayBuying and GetMyeBaySelling, feedback information (FeedbackScore
 and FeedbackRatingStar) is returned in BidList.ItemArray.Item.Seller. For
 GetMyeBayBuying, the feedback score of each seller with an item having
 received a bid from the buyer is returned. For GetMyeBaySelling, the
 feedback score of the seller is returned. <br>
 <br>
 GetMyeBayBuying and GetMyeBaySelling also return feedback information
 (FeedbackScore and FeedbackRatingStar) in
 BidList.ItemArray.Item.SellingStatus.HighBidder. GetMyeBayBuying returns
 feedback information on the high bidder of each item the buyer is bidding
 on. GetMyeBaySelling returns feedback information on the high bidder of each
 item the seller is selling.<br>
 <br>
 Since a bidder's user info is anonymous, the real feedback score will
 be returned only to that bidder, and to the seller of an item that the
 user is bidding on. For all other users, the value -99 is returned.
 
 
 type : NSNumber, wrapper for primitive int
*/
@property (nonatomic, retain) NSNumber *feedbackScore;

/**
 
 Total count of negative Feedback entries received by the user, including weekly repeats.
 
 
 type : NSNumber, wrapper for primitive int
*/
@property (nonatomic, retain) NSNumber *uniqueNegativeFeedbackCount;

/**
 
 Total count of positive Feedback entries received by the user, including
 weekly repeats. Contains the aggregate feedback score for a user. A member's
 feedback score is the net positive feedback minus the net negative feedback
 left for the member. Feedback scores are a quantitative expression of the
 desirability of dealing with that person as a Buyer or a Seller on either side of an order. Each order line item can result in one feedback entry for
 a given user (the buyer can leave feedback for the seller, and the seller
 can leave feedback for the buyer.). That one feedback can be positive,
 negative, or neutral. The aggregated feedback counts for a particular user
 represent that user's overall feedback score (referred to as a "feedback
 rating" on the eBay site). This rating is commonly expressed as the eBay
 Feedback score for the user.
 
 
 type : NSNumber, wrapper for primitive int
*/
@property (nonatomic, retain) NSNumber *uniquePositiveFeedbackCount;

/**
 
 Percent of total feedback that is positive. For example, if the member has
 50 feedbacks, where 49 are positive and 1 is neutral or negative, the
 positive feedback percent could be 98.0. The value uses a max precision of 4
 and a scale of 1. If the user has feedback, this value can be returned
 regardless of whether the member has chosen to make their feedback private.
 Not returned if the user has no feedback.
 
 
 type : NSNumber, wrapper for primitive float
*/
@property (nonatomic, retain) NSNumber *positiveFeedbackPercent;

/**
 
 Indicates whether the user has chosen to make their feedback score and
 feedback details private (hidden from other users). Note that the percentage
 of positive feedback can still be returned, even if other feedback details
 are private.
 <br><br>
 Since a bidder's user info is anonymous, this tag will be returned only to
 that bidder, and to the seller of an item that the user is bidding on.
 
 
 type : NSNumber, wrapper for primitive bool
*/
@property (nonatomic, retain) NSNumber *feedbackPrivate;

/**
 
 Visual indicator of user's feedback score. See FeedbackRatingStarCodeType for
 specific values.
 
 
 type: string constant in Trading_FeedbackRatingStarCodeType.h
*/
@property (nonatomic, retain) NSString *feedbackRatingStar;

/**
 
 Indicates whether the user has been verified. For more information
 about the ID Verify program, see:
 http://pages.ebay.com/help/policies/identity-idverify.html
 
 
 type : NSNumber, wrapper for primitive bool
*/
@property (nonatomic, retain) NSNumber *idVerified;

/**
 
 If true, indicates that the user is in good standing with eBay.
 
 
 type : NSNumber, wrapper for primitive bool
*/
@property (nonatomic, retain) NSNumber *eBayGoodStanding;

/**
 
 If true, identifies a new user who has been a registered eBay user for 30 days
 or less. Always false after the user has been registered for more than 30
 days. Does not indicate an ID change (see UserIdChanged).
 
 
 type : NSNumber, wrapper for primitive bool
*/
@property (nonatomic, retain) NSNumber *newUser;

/**
 
 Registration address for a user.<br>
 <br>
 <b>GetUser:</b> eBay returns complete
 RegistrationAddress details (including Phone), as applicable to the
 registration site, when you retrieve your own user data. <br>
 <br>
 <b>GetItem and GetSellerTransactions:</b> RegistrationAddress for another user
 (except for Phone) is only returned if you have an order relationship
 with that user AND that user is registered on DE/AT/CH, regardless of your
 registration site and the site to which you send the request. For example,
 the seller can see the buyer's registration address if the buyer is
 registered on DE/AT/CH, or the buyer can see the seller's registration
 address if the seller is registered on DE/AT/CH. (The buyer and seller won't
 see their own registration addresses in GetItem.)
 
 
 type : class Trading_AddressType
*/
@property (nonatomic, retain) Trading_AddressType *registrationAddress;

/**
 
 Indicates the date the specified user originally registered with eBay.
 <br><br>
 Since a bidder's user info is anonymous, this tag will be returned only to that bidder,
 and to the seller of an item that the user is bidding on.
 
 
 type : NSDate, wrapper for primitive date
*/
@property (nonatomic, retain) NSDate *registrationDate;

/**
 
 eBay site the user is registered with.
 <br><br>
 Since a bidder's user info is anonymous, this tag will be returned only to
 that bidder, and to the seller of an item that the user is bidding on.
 
 
 type: string constant in Trading_SiteCodeType.h
*/
@property (nonatomic, retain) NSString *site;

/**
 
 Indicates the user's registration/user status.
 
 
 type: string constant in Trading_UserStatusCodeType.h
*/
@property (nonatomic, retain) NSString *status;

/**
 
 Unique eBay user ID for the user.<br>
 <br>
 Since a bidder's user info is anonymous, this tag contains the actual
 value of an ID only for that bidder, and for the seller of an item that the user is
 bidding on. For other users, the actual value is replaced by an
 anonymous value, according to these rules:
 <br><br>
 When bidding on items, UserID is replaced with the
 value "a****b" where a and b are random characters from the UserID. For
 example, if the UserID = IBidALot, it might be displayed as, "I****A".
 <br><br>
 Note that in this format, the anonymous bidder ID can change for each
 auction.
 <br><br>
 For GetMyeBayBuying only, when bidding on items: UserID
 is replaced with the value "a****b" where a and b are random characters from
 the UserID.
 <br><br>
 When bidding on items listed on the the Philippines site: UserID is replaced
 with the value "Bidder X" where X is a number indicating the order of that
 user's first bid. For example, if the user was the third bidder,
 UserID = Bidder 3.
 <br><br>
 Note that in this Philippines site format, the anonymous bidder ID stays the same for a given
 auction, but is different for different auctions. For example, a bidder who
 is the third and then the seventh bidder in an auction will be listed for
 both bids as "Bidder 3". However, if that same bidder is the first bidder on
 a different auction, the bidder will be listed for that auction as "Bidder
 1", not "Bidder 3".
 <br><br>
 For GetMyeBayBuying only, when bidding on items listed on the UK and AU sites:
 UserID is replaced with the string "High Bidder".
 <br><br>
 For PlaceOffer, see also SellingStatus.HighBidder.
 
 
 type : NSString, wrapper for primitive string
*/
@property (nonatomic, retain) NSString *userID;

/**
 
 If true, identifies a user whose ID has changed within the last 30 days. Does not
 indicate a new user (see NewUser).
 <br><br>
 Since a bidder's user info is anonymous, this tag will be returned only to that bidder,
 and to the seller of an item that the user is bidding on.
 
 
 type : NSNumber, wrapper for primitive bool
*/
@property (nonatomic, retain) NSNumber *userIDChanged;

/**
 
 Date and time the user's data was last changed (in GMT).
 <br><br>
 Since a bidder's user info is anonymous, this tag will be returned only to that bidder,
 and to the seller of an item that the user is bidding on.
 
 
 type : NSDate, wrapper for primitive date
*/
@property (nonatomic, retain) NSDate *userIDLastChanged;

/**
 
 Indicates whether or not the user is subject to VAT.
 Users who have registered with eBay as VAT-exempt are not
 subject to VAT. See documentation on Value-Added Tax (VAT).
 
 
 type: string constant in Trading_VATStatusCodeType.h
*/
@property (nonatomic, retain) NSString *vatStatus;

/**
 
 Contains information about the user as a buyer, such as
 the shipping address. See BuyerType for its child elements.
 <br><br>
 Since a bidder's user info is anonymous, this tag will be returned only to that bidder,
 and to the seller of an item that the user is bidding on.
 
 
 type : class Trading_BuyerType
*/
@property (nonatomic, retain) Trading_BuyerType *buyerInfo;

/**
 
 Contains information about a seller, including listing settings, listing
 preferences, seller rankings, and seller type.
 <br><br>
 This field is replaced by the SellerBusinessType
 field if the user is a business seller with a site
 ID of 77 (Germany), 3 (UK), 205 (Ireland) or 100 (Motors).
 <br><br>
 See SellerType or SellerBusinessCodeType for the child elements.
 
 
 type : class Trading_SellerType
*/
@property (nonatomic, retain) Trading_SellerType *sellerInfo;

/**
 
 This field indicates whether the user's account is enabled for buying and selling
 (indicated by 'FullMarketPlaceParticipant') on eBay, or if the account is a Partially
 Provisioned Account (indicated by 'Shopper') without selling and buying privileges on
 eBay.
 
 
 type: string constant in Trading_BusinessRoleType.h
*/
@property (nonatomic, retain) NSString *businessRole;

/**
 
 Contains information about the seller's charity affliations.
 Returned if the user is affiliated with one or more
 charities. Seller must be registered with the eBay Giving
 Works provider to be affiliated with a charity non-profit
 organization.
 
 
 type : class Trading_CharityAffiliationsType
*/
@property (nonatomic, retain) Trading_CharityAffiliationsType *charityAffiliations;

/**
 
 The user's PayPal account level. Only returned for the user identified in
 eBayAuthToken. That is, you cannot see someone else's PayPal account level.
 Use this information to check whether a seller is eligible to list digital
 downloadable items. See the eBay Web site online
 help for current PayPal requirements for listing digital items.
 
 
 type: string constant in Trading_PayPalAccountLevelCodeType.h
*/
@property (nonatomic, retain) NSString *payPalAccountLevel;

/**
 
 The user's PayPal account type. Only returned for the user identified in
 eBayAuthToken. That is, you cannot see someone else's PayPal account type.
 Use this information to check whether a seller is likely to be eligible to
 list digital downloadable items. See the eBay Web site online help for
 current PayPal requirements for listing digital items.
 
 
 type: string constant in Trading_PayPalAccountTypeCodeType.h
*/
@property (nonatomic, retain) NSString *payPalAccountType;

/**
 
 The user's PayPal account status. Only returned for the user identified in
 eBayAuthToken. That is, you cannot see someone else's PayPal account status.
 Use this information to check whether a seller is eligible to list digital
 downloadable items. See the eBay Web site online
 help for current PayPal requirements for listing digital items.
 
 
 type: string constant in Trading_PayPalAccountStatusCodeType.h
*/
@property (nonatomic, retain) NSString *payPalAccountStatus;

/**
 
 Specifies the subscription level for a user.
 
 
 entry type : string constant in Trading_EBaySubscriptionTypeCodeType.h
*/

@property (nonatomic, retain) NSMutableArray *userSubscription;

/**
 
 No longer used.
 
 
 type : NSNumber, wrapper for primitive bool
*/
@property (nonatomic, retain) NSNumber *siteVerified;

/**
 
 Indicates the Skype name of the user. Available if
 the seller has a Skype account and has linked it (on the eBay site)
 with his or her eBay account.
 
 
 entry type : NSString, wrapper for primitive string
*/

@property (nonatomic, retain) NSMutableArray *skypeID;

/**
 
 Indicates whether a user has read-only access to the eBay Wiki (true)
 or whether the user is able contribute or edit articles on the eBay Wiki
 (false). By default, all registered eBay users have access to contribute and
 edit articles on the eBay Wiki. All content contributed to the eBay Wiki is
 subject to the Community Content Policy.
 
 
 type : NSNumber, wrapper for primitive bool
*/
@property (nonatomic, retain) NSNumber *eBayWikiReadOnly;

/**
 
 TUV level is a number allocated to a user based on various characteristics
 such as buyer, seller, new buyer, new seller, high risk, or bid limit.
 Applies to eBay Motors Pro applications only.
 
 
 type : NSNumber, wrapper for primitive int
*/
@property (nonatomic, retain) NSNumber *tuvLevel;

/**
 
 The value added tax identifier (VATID) is applicable to the VAT-enabled
 sites.
 Applies to eBay Motors Pro applications only.
 
 
 type : NSString, wrapper for primitive string
*/
@property (nonatomic, retain) NSString *vatid;

/**
 
 Indicates if item is listed for sale by owner (FSBO) or listed by a
 dealer.
 Applies to eBay Motors Pro applications only.
 
 
 type : NSNumber, wrapper for primitive bool
*/
@property (nonatomic, retain) NSNumber *motorsDealer;

/**
 
 Not used by any call.
 
 
 type: string constant in Trading_SellerPaymentMethodCodeType.h
*/
@property (nonatomic, retain) NSString *sellerPaymentMethod;

/**
 
 Contains information about the user as a bidder on a certain
 item. Returned for GetAllBidders if IncludeBiddingSummary =
 true is included in the request.
 
 
 type : class Trading_BiddingSummaryType
*/
@property (nonatomic, retain) Trading_BiddingSummaryType *biddingSummary;

/**
 
 Indicates whether or not the User container has been made
 anonymous. If true, some elements in the User container have
 either been removed, or had their values changed to remove
 identifying characteristics. If false, all expected elements
 are returned, and no values are changed.
 <br><br>
 Since a bidder's user info is anonymous, this tag is returned as false
 only to the bidder, and to the seller of an item that the user is bidding
 on. For all other users, this tag is returned as true.
 
 
 type : NSNumber, wrapper for primitive bool
*/
@property (nonatomic, retain) NSNumber *userAnonymized;

/**
 
 Total count of neutral Feedback entries received by the user, including weekly repeats.
 
 
 type : NSNumber, wrapper for primitive int
*/
@property (nonatomic, retain) NSNumber *uniqueNeutralFeedbackCount;

/**
 
 Reserved for internal or future use.
 
 
 type : NSNumber, wrapper for primitive bool
*/
@property (nonatomic, retain) NSNumber *enterpriseSeller;

/**
 
 When a user has their billing option set to 'email', they can include
 this element in a GetUser request to retrieve their own email bills.
 
 
 type : NSString, wrapper for primitive string
*/
@property (nonatomic, retain) NSString *billingEmail;

/**
 
 Indicate whether user is eligible to list item or not.
 
 
 type : NSNumber, wrapper for primitive bool
*/
@property (nonatomic, retain) NSNumber *qualifiesForSelling;

/**
 
 Contains the static email address of an eBay member, used within the "reply to"
 email address when the eBay member sends a message.
 (Each eBay member is assigned a static alias. The alias is
 used within a static email address.)
 
 
 type : NSString, wrapper for primitive string
*/
@property (nonatomic, retain) NSString *staticAlias;

/**
 (public property)
 
 entry type : PicoAnyElement, wrapper for primitive anyelement
*/

@property (nonatomic, retain) NSMutableArray *any;


@end
