// Generated by xsd compiler for ios/objective-c
// DO NOT CHANGE!

#import <Foundation/Foundation.h>
#import "Trading_OrderType.h"
#import "Trading_TransactionArrayType.h"
#import "Trading_AddressType.h"
#import "Trading_RefundArrayType.h"
#import "Trading_ShippingDetailsType.h"
#import "Trading_CheckoutStatusType.h"
#import "Trading_PaymentHoldDetailType.h"
#import "Trading_MultiLegShippingDetailsType.h"
#import "Trading_ExternalTransactionType.h"
#import "Trading_ShippingServiceOptionsType.h"
#import "Trading_AmountType.h"

@implementation Trading_OrderType

@synthesize orderID = _orderID;
@synthesize orderStatus = _orderStatus;
@synthesize adjustmentAmount = _adjustmentAmount;
@synthesize amountPaid = _amountPaid;
@synthesize amountSaved = _amountSaved;
@synthesize checkoutStatus = _checkoutStatus;
@synthesize shippingDetails = _shippingDetails;
@synthesize creatingUserRole = _creatingUserRole;
@synthesize createdTime = _createdTime;
@synthesize paymentMethods = _paymentMethods;
@synthesize sellerEmail = _sellerEmail;
@synthesize shippingAddress = _shippingAddress;
@synthesize shippingServiceSelected = _shippingServiceSelected;
@synthesize subtotal = _subtotal;
@synthesize total = _total;
@synthesize externalTransaction = _externalTransaction;
@synthesize transactionArray = _transactionArray;
@synthesize buyerUserID = _buyerUserID;
@synthesize paidTime = _paidTime;
@synthesize shippedTime = _shippedTime;
@synthesize integratedMerchantCreditCardEnabled = _integratedMerchantCreditCardEnabled;
@synthesize bundlePurchase = _bundlePurchase;
@synthesize buyerCheckoutMessage = _buyerCheckoutMessage;
@synthesize eiasToken = _eiasToken;
@synthesize paymentHoldStatus = _paymentHoldStatus;
@synthesize paymentHoldDetails = _paymentHoldDetails;
@synthesize refundArray = _refundArray;
@synthesize refundAmount = _refundAmount;
@synthesize refundStatus = _refundStatus;
@synthesize isMultiLegShipping = _isMultiLegShipping;
@synthesize multiLegShippingDetails = _multiLegShippingDetails;
@synthesize any = _any;

// class meta-data method
// note: this method is only for internal use, DO NOT CHANGE!
+(PicoClassSchema *)getClassMetaData {
    return nil;
}

// property meta-data method
// note: this method is only for internal use, DO NOT CHANGE!
+(NSMutableDictionary *)getPropertyMetaData {
    NSMutableDictionary *map = [NSMutableDictionary dictionary];
    
    PicoPropertySchema *ps = nil;
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"OrderID" propertyName:@"orderID" type:PICO_TYPE_STRING clazz:nil];
    [map setObject:ps forKey:@"orderID"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"OrderStatus" propertyName:@"orderStatus" type:PICO_TYPE_ENUM clazz:nil];
    [map setObject:ps forKey:@"orderStatus"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"AdjustmentAmount" propertyName:@"adjustmentAmount" type:PICO_TYPE_OBJECT clazz:[Trading_AmountType class]];
    [map setObject:ps forKey:@"adjustmentAmount"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"AmountPaid" propertyName:@"amountPaid" type:PICO_TYPE_OBJECT clazz:[Trading_AmountType class]];
    [map setObject:ps forKey:@"amountPaid"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"AmountSaved" propertyName:@"amountSaved" type:PICO_TYPE_OBJECT clazz:[Trading_AmountType class]];
    [map setObject:ps forKey:@"amountSaved"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"CheckoutStatus" propertyName:@"checkoutStatus" type:PICO_TYPE_OBJECT clazz:[Trading_CheckoutStatusType class]];
    [map setObject:ps forKey:@"checkoutStatus"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"ShippingDetails" propertyName:@"shippingDetails" type:PICO_TYPE_OBJECT clazz:[Trading_ShippingDetailsType class]];
    [map setObject:ps forKey:@"shippingDetails"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"CreatingUserRole" propertyName:@"creatingUserRole" type:PICO_TYPE_ENUM clazz:nil];
    [map setObject:ps forKey:@"creatingUserRole"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"CreatedTime" propertyName:@"createdTime" type:PICO_TYPE_DATE clazz:nil];
    [map setObject:ps forKey:@"createdTime"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT_ARRAY xmlName:@"PaymentMethods" propertyName:@"paymentMethods" type:PICO_TYPE_ENUM clazz:nil];
    [map setObject:ps forKey:@"paymentMethods"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"SellerEmail" propertyName:@"sellerEmail" type:PICO_TYPE_STRING clazz:nil];
    [map setObject:ps forKey:@"sellerEmail"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"ShippingAddress" propertyName:@"shippingAddress" type:PICO_TYPE_OBJECT clazz:[Trading_AddressType class]];
    [map setObject:ps forKey:@"shippingAddress"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"ShippingServiceSelected" propertyName:@"shippingServiceSelected" type:PICO_TYPE_OBJECT clazz:[Trading_ShippingServiceOptionsType class]];
    [map setObject:ps forKey:@"shippingServiceSelected"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"Subtotal" propertyName:@"subtotal" type:PICO_TYPE_OBJECT clazz:[Trading_AmountType class]];
    [map setObject:ps forKey:@"subtotal"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"Total" propertyName:@"total" type:PICO_TYPE_OBJECT clazz:[Trading_AmountType class]];
    [map setObject:ps forKey:@"total"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT_ARRAY xmlName:@"ExternalTransaction" propertyName:@"externalTransaction" type:PICO_TYPE_OBJECT clazz:[Trading_ExternalTransactionType class]];
    [map setObject:ps forKey:@"externalTransaction"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"TransactionArray" propertyName:@"transactionArray" type:PICO_TYPE_OBJECT clazz:[Trading_TransactionArrayType class]];
    [map setObject:ps forKey:@"transactionArray"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"BuyerUserID" propertyName:@"buyerUserID" type:PICO_TYPE_STRING clazz:nil];
    [map setObject:ps forKey:@"buyerUserID"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"PaidTime" propertyName:@"paidTime" type:PICO_TYPE_DATE clazz:nil];
    [map setObject:ps forKey:@"paidTime"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"ShippedTime" propertyName:@"shippedTime" type:PICO_TYPE_DATE clazz:nil];
    [map setObject:ps forKey:@"shippedTime"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"IntegratedMerchantCreditCardEnabled" propertyName:@"integratedMerchantCreditCardEnabled" type:PICO_TYPE_BOOL clazz:nil];
    [map setObject:ps forKey:@"integratedMerchantCreditCardEnabled"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"BundlePurchase" propertyName:@"bundlePurchase" type:PICO_TYPE_BOOL clazz:nil];
    [map setObject:ps forKey:@"bundlePurchase"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"BuyerCheckoutMessage" propertyName:@"buyerCheckoutMessage" type:PICO_TYPE_STRING clazz:nil];
    [map setObject:ps forKey:@"buyerCheckoutMessage"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"EIASToken" propertyName:@"eiasToken" type:PICO_TYPE_STRING clazz:nil];
    [map setObject:ps forKey:@"eiasToken"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"PaymentHoldStatus" propertyName:@"paymentHoldStatus" type:PICO_TYPE_ENUM clazz:nil];
    [map setObject:ps forKey:@"paymentHoldStatus"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"PaymentHoldDetails" propertyName:@"paymentHoldDetails" type:PICO_TYPE_OBJECT clazz:[Trading_PaymentHoldDetailType class]];
    [map setObject:ps forKey:@"paymentHoldDetails"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"RefundArray" propertyName:@"refundArray" type:PICO_TYPE_OBJECT clazz:[Trading_RefundArrayType class]];
    [map setObject:ps forKey:@"refundArray"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"RefundAmount" propertyName:@"refundAmount" type:PICO_TYPE_OBJECT clazz:[Trading_AmountType class]];
    [map setObject:ps forKey:@"refundAmount"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"RefundStatus" propertyName:@"refundStatus" type:PICO_TYPE_STRING clazz:nil];
    [map setObject:ps forKey:@"refundStatus"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"IsMultiLegShipping" propertyName:@"isMultiLegShipping" type:PICO_TYPE_BOOL clazz:nil];
    [map setObject:ps forKey:@"isMultiLegShipping"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"MultiLegShippingDetails" propertyName:@"multiLegShippingDetails" type:PICO_TYPE_OBJECT clazz:[Trading_MultiLegShippingDetailsType class]];
    [map setObject:ps forKey:@"multiLegShippingDetails"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ANY_ELEMENT xmlName:@"any" propertyName:@"any" type:PICO_TYPE_ANYELEMENT clazz:nil];
    [map setObject:ps forKey:@"any"];
    [ps release];
    
    return map;
}



-(void)dealloc {
    self.orderID = nil;
    self.orderStatus = nil;
    self.adjustmentAmount = nil;
    self.amountPaid = nil;
    self.amountSaved = nil;
    self.checkoutStatus = nil;
    self.shippingDetails = nil;
    self.creatingUserRole = nil;
    self.createdTime = nil;
    self.paymentMethods = nil;
    self.sellerEmail = nil;
    self.shippingAddress = nil;
    self.shippingServiceSelected = nil;
    self.subtotal = nil;
    self.total = nil;
    self.externalTransaction = nil;
    self.transactionArray = nil;
    self.buyerUserID = nil;
    self.paidTime = nil;
    self.shippedTime = nil;
    self.integratedMerchantCreditCardEnabled = nil;
    self.bundlePurchase = nil;
    self.buyerCheckoutMessage = nil;
    self.eiasToken = nil;
    self.paymentHoldStatus = nil;
    self.paymentHoldDetails = nil;
    self.refundArray = nil;
    self.refundAmount = nil;
    self.refundStatus = nil;
    self.isMultiLegShipping = nil;
    self.multiLegShippingDetails = nil;
    self.any = nil;
    [super dealloc];
}

@end
