// Generated by xsd compiler for ios/objective-c
// DO NOT CHANGE!

#import <Foundation/Foundation.h>
#import "Trading_RecommendationValidationRulesType.h"
#import "Trading_NameValueRelationshipType.h"

@implementation Trading_RecommendationValidationRulesType

@synthesize valueType = _valueType;
@synthesize minValues = _minValues;
@synthesize maxValues = _maxValues;
@synthesize selectionMode = _selectionMode;
@synthesize confidence = _confidence;
@synthesize relationship = _relationship;
@synthesize variationPicture = _variationPicture;
@synthesize variationSpecifics = _variationSpecifics;
@synthesize valueFormat = _valueFormat;
@synthesize any = _any;

// class meta-data method
// note: this method is only for internal use, DO NOT CHANGE!
+(PicoClassSchema *)getClassMetaData {
    return nil;
}

// property meta-data method
// note: this method is only for internal use, DO NOT CHANGE!
+(NSMutableDictionary *)getPropertyMetaData {
    NSMutableDictionary *map = [NSMutableDictionary dictionary];
    
    PicoPropertySchema *ps = nil;
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"ValueType" propertyName:@"valueType" type:PICO_TYPE_ENUM clazz:nil];
    [map setObject:ps forKey:@"valueType"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"MinValues" propertyName:@"minValues" type:PICO_TYPE_INT clazz:nil];
    [map setObject:ps forKey:@"minValues"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"MaxValues" propertyName:@"maxValues" type:PICO_TYPE_INT clazz:nil];
    [map setObject:ps forKey:@"maxValues"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"SelectionMode" propertyName:@"selectionMode" type:PICO_TYPE_ENUM clazz:nil];
    [map setObject:ps forKey:@"selectionMode"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"Confidence" propertyName:@"confidence" type:PICO_TYPE_INT clazz:nil];
    [map setObject:ps forKey:@"confidence"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT_ARRAY xmlName:@"Relationship" propertyName:@"relationship" type:PICO_TYPE_OBJECT clazz:[Trading_NameValueRelationshipType class]];
    [map setObject:ps forKey:@"relationship"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"VariationPicture" propertyName:@"variationPicture" type:PICO_TYPE_ENUM clazz:nil];
    [map setObject:ps forKey:@"variationPicture"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"VariationSpecifics" propertyName:@"variationSpecifics" type:PICO_TYPE_ENUM clazz:nil];
    [map setObject:ps forKey:@"variationSpecifics"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"ValueFormat" propertyName:@"valueFormat" type:PICO_TYPE_ENUM clazz:nil];
    [map setObject:ps forKey:@"valueFormat"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ANY_ELEMENT xmlName:@"any" propertyName:@"any" type:PICO_TYPE_ANYELEMENT clazz:nil];
    [map setObject:ps forKey:@"any"];
    [ps release];
    
    return map;
}



-(void)dealloc {
    self.valueType = nil;
    self.minValues = nil;
    self.maxValues = nil;
    self.selectionMode = nil;
    self.confidence = nil;
    self.relationship = nil;
    self.variationPicture = nil;
    self.variationSpecifics = nil;
    self.valueFormat = nil;
    self.any = nil;
    [super dealloc];
}

@end
