// Generated by xsd compiler for ios/objective-c
// DO NOT CHANGE!

#import <Foundation/Foundation.h>
#import "Trading_GetSellerDashboardResponseType.h"
#import "Trading_PolicyComplianceDashboardType.h"
#import "Trading_PowerSellerDashboardType.h"
#import "Trading_PerformanceDashboardType.h"
#import "Trading_BuyerSatisfactionDashboardType.h"
#import "Trading_SellerAccountDashboardType.h"
#import "Trading_SearchStandingDashboardType.h"
#import "Trading_SellerFeeDiscountDashboardType.h"

@implementation Trading_GetSellerDashboardResponseType

@synthesize searchStanding = _searchStanding;
@synthesize sellerFeeDiscount = _sellerFeeDiscount;
@synthesize powerSellerStatus = _powerSellerStatus;
@synthesize policyCompliance = _policyCompliance;
@synthesize buyerSatisfaction = _buyerSatisfaction;
@synthesize sellerAccount = _sellerAccount;
@synthesize performance = _performance;

// class meta-data method
// note: this method is only for internal use, DO NOT CHANGE!
+(PicoClassSchema *)getClassMetaData {
    PicoClassSchema *cs = [[PicoClassSchema alloc] initWithXmlName:@"GetSellerDashboardResponse" nsUri:@"urn:ebay:apis:eBLBaseComponents"];
    [cs autorelease];
    return cs;
}

// property meta-data method
// note: this method is only for internal use, DO NOT CHANGE!
+(NSMutableDictionary *)getPropertyMetaData {
    NSMutableDictionary *map = [NSMutableDictionary dictionary];
    
    PicoPropertySchema *ps = nil;
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"SearchStanding" propertyName:@"searchStanding" type:PICO_TYPE_OBJECT clazz:[Trading_SearchStandingDashboardType class]];
    [map setObject:ps forKey:@"searchStanding"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"SellerFeeDiscount" propertyName:@"sellerFeeDiscount" type:PICO_TYPE_OBJECT clazz:[Trading_SellerFeeDiscountDashboardType class]];
    [map setObject:ps forKey:@"sellerFeeDiscount"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"PowerSellerStatus" propertyName:@"powerSellerStatus" type:PICO_TYPE_OBJECT clazz:[Trading_PowerSellerDashboardType class]];
    [map setObject:ps forKey:@"powerSellerStatus"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"PolicyCompliance" propertyName:@"policyCompliance" type:PICO_TYPE_OBJECT clazz:[Trading_PolicyComplianceDashboardType class]];
    [map setObject:ps forKey:@"policyCompliance"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"BuyerSatisfaction" propertyName:@"buyerSatisfaction" type:PICO_TYPE_OBJECT clazz:[Trading_BuyerSatisfactionDashboardType class]];
    [map setObject:ps forKey:@"buyerSatisfaction"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"SellerAccount" propertyName:@"sellerAccount" type:PICO_TYPE_OBJECT clazz:[Trading_SellerAccountDashboardType class]];
    [map setObject:ps forKey:@"sellerAccount"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT_ARRAY xmlName:@"Performance" propertyName:@"performance" type:PICO_TYPE_OBJECT clazz:[Trading_PerformanceDashboardType class]];
    [map setObject:ps forKey:@"performance"];
    [ps release];
    
    return map;
}



-(void)dealloc {
    self.searchStanding = nil;
    self.sellerFeeDiscount = nil;
    self.powerSellerStatus = nil;
    self.policyCompliance = nil;
    self.buyerSatisfaction = nil;
    self.sellerAccount = nil;
    self.performance = nil;
    [super dealloc];
}

@end
