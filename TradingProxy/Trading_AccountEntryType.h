// Generated by xsd compiler for ios/objective-c
// DO NOT CHANGE!

#import <Foundation/Foundation.h>
#import "PicoClassSchema.h"
#import "PicoPropertySchema.h"
#import "PicoConstants.h"
#import "PicoBindable.h"


@class Trading_AmountType;

/**
 
 Contains the data for a single account detail entry. Each detail entry is a
 transaction posted to the account and may be: a credit, a debit, or an
 administrative action (such as an update putting a credit card on file for
 the account). You can uniquely identify
 the entries that the <b>GetAccount</b> call returns within the <b>AccountEntries</b> tag.
 Specifically, the following fields, returned within the <b>AccountEntries</b> tag,
 can be used in combination as a unique key: AccountEntry.Date, AccountEntry.AccountDetailsEntryType,
 AccountEntry.ItemID, and AccountEntry.RefNumber.
 
 
 @ingroup EBayAPIInterface
*/
@interface Trading_AccountEntryType : NSObject <PicoBindable> {

@private
    NSString *_accountDetailsEntryType;
    NSString *_description;
    Trading_AmountType *_balance;
    NSDate *_date;
    Trading_AmountType *_grossDetailAmount;
    NSString *_itemID;
    NSString *_memo;
    Trading_AmountType *_conversionRate;
    Trading_AmountType *_netDetailAmount;
    NSString *_refNumber;
    NSNumber *_vatPercent;
    NSString *_title;
    NSString *_orderLineItemID;
    NSString *_transactionID;
    NSNumber *_receivedTopRatedDiscount;
    NSMutableArray *_any;

}


/**
 
 Indicates the type of transaction or reason for the transaction. For example,
 a value of <b>FeeGallery</b> indicates a debit for listing an item in the Gallery.
 Possible values are enumerated in the <b>AccountDetailEntryCodeType</b> code list.
 
 
 type: string constant in Trading_AccountDetailEntryCodeType.h
*/
@property (nonatomic, retain) NSString *accountDetailsEntryType;

/**
 
 A description of the monetary transaction or administrative action applied
 to an eBay account.
 
 
 type : NSString, wrapper for primitive string
*/
@property (nonatomic, retain) NSString *description;

/**
 
 Balance after the account entry's credit or debit amount has been applied.
 Can be 0.00. The value is positive for debits
 and negative for credits.
 
 
 type : class Trading_AmountType
*/
@property (nonatomic, retain) Trading_AmountType *balance;

/**
 
 Timestamp indicating the date and time that the entry was posted to the account, in
 GMT.
 
 
 type : NSDate, wrapper for primitive date
*/
@property (nonatomic, retain) NSDate *date;

/**
 
 Gross fees that are assessed by eBay (net fees plus VAT, if any).
 Returned even if VAT does not apply.
 The value is positive for debits and negative for credits.
 
 
 type : class Trading_AmountType
*/
@property (nonatomic, retain) Trading_AmountType *grossDetailAmount;

/**
 
 If the account detail entry is associated with an item listing, this field
 shows the eBay <b>ItemID</b> value. Otherwise, 0 is returned in this field.
 
 
 type : NSString, wrapper for primitive string
*/
@property (nonatomic, retain) NSString *itemID;

/**
 
 Memo line for the account entry. It can be an empty string.
 
 
 type : NSString, wrapper for primitive string
*/
@property (nonatomic, retain) NSString *memo;

/**
 
 The rate used for the currency conversion for a transaction.
  
 
 type : class Trading_AmountType
*/
@property (nonatomic, retain) Trading_AmountType *conversionRate;

/**
 
 Net fees that are assessed by eBay, excluding additional surchargesand VAT
 (if any). Returned even if VAT does not apply. The value is positive for
 debits (user pays eBay) and negative for credits (eBay pays user).
  
 
 type : class Trading_AmountType
*/
@property (nonatomic, retain) Trading_AmountType *netDetailAmount;

/**
 
 eBay reference number for the account entry. May return no value for some
 account transactions, such as an administrative action like placing the
 user's credit card on file.  You can uniquely identify
 the entries that the <b>GetAccount</b> call returns within the <b>AccountEntries</b> tag.
 Specifically, the following fields, returned within the <b>AccountEntries</b> tag,
 can be used in combination as a unique key: AccountEntry.Date, AccountEntry.AccountDetailsEntryType,
 AccountEntry.ItemID, and AccountEntry.RefNumber.
 
 
 type : NSString, wrapper for primitive string
*/
@property (nonatomic, retain) NSString *refNumber;

/**
 
 VAT rate for the item. When the VATPercent is specified, the
 item's VAT information appears on the item's listing page. In
 addition, the seller can choose to print an invoice that
 includes the item's net price, VAT percent, VAT amount, and
 total price. Since VAT rates vary
 depending on the item and on the user's country of residence, a
 seller is responsible for entering the correct VAT rate; it is
 not calculated by eBay. To specify a <b>VATPercent</b>, a seller must
 have a VAT-ID registered with eBay and must be listing the item
 on a VAT-enabled site. Max precision 3
 decimal places. Max length 5 characters. Note: The View Item
 page displays the precision to 2 decimal places with no
 trailing zeros. However, the full value you send in is stored.
 Returned for all users, not just VAT users, with GetAccountResponse.
 
 
 type : NSNumber, wrapper for primitive double
*/
@property (nonatomic, retain) NSNumber *vatPercent;

/**
 
 Title of the entry, or explanation of why the debit or credit was
 applied.
 
 
 type : NSString, wrapper for primitive string
*/
@property (nonatomic, retain) NSString *title;

/**
 
 <b>OrderLineItemID</b> is a unique identifier for an eBay order line item and is
 based upon the concatenation of <b>ItemID</b> and <b>TransactionID</b>, with a hyphen in
 between these two IDs. If the account detail entry is associated with an
 order line item, this field shows the <b>OrderLineItemID</b> value. Otherwise, 0 is
 returned in this field.
 
 
 type : NSString, wrapper for primitive string
*/
@property (nonatomic, retain) NSString *orderLineItemID;

/**
 
 The unique identifier of an order line item (transaction). If the account
 detail entry is associated with an order line item, this field shows the
 eBay <b>TransactionID</b> value. Otherwise, 0 is returned in this field.
 
 
 type : NSString, wrapper for primitive string
*/
@property (nonatomic, retain) NSString *transactionID;

/**
 
 This boolean is returned as 'true' if the seller received a top-rated seller
 20 percent discount on the final value fee for the order line item.
 
 
 type : NSNumber, wrapper for primitive bool
*/
@property (nonatomic, retain) NSNumber *receivedTopRatedDiscount;

/**
 (public property)
 
 entry type : PicoAnyElement, wrapper for primitive anyelement
*/

@property (nonatomic, retain) NSMutableArray *any;


@end
