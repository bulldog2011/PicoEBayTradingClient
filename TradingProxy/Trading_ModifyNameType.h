// Generated by xsd compiler for ios/objective-c
// DO NOT CHANGE!

#import <Foundation/Foundation.h>
#import "PicoClassSchema.h"
#import "PicoPropertySchema.h"
#import "PicoConstants.h"
#import "PicoBindable.h"



/**
 
 Defines the details about one specific trait name.
 
 
 @ingroup EBayAPIInterface
*/
@interface Trading_ModifyNameType : NSObject <PicoBindable> {

@private
    NSString *_name;
    NSString *_newName;
    NSMutableArray *_any;

}


/**
 
 The current name (e.g., Material) of a variation specific
 in the active listing. If specified, NewName must also be specified.
 
 
 type : NSString, wrapper for primitive string
*/
@property (nonatomic, retain) NSString *name;

/**
 
 The new name (e.g., Fabric) of the variation specific you are
 modifying.<br>
 <br>
 If specified, Name must also be specified. <br>
 <br>
 Also specify the new name (and omit the original name) in
 VariationSpecificsSet.<br>
 <br>
 After this change is made, GetItem only shows the new name in VariationSpecfiics.<br>
 <br>
 Note that variations that were sold while they used the old name will also be changed to use the new name in eBay's system. (This may change in the future.)<br>
 <br>
 If you are making other changes to a variation (such as adding new
 values or pictures), use consistent names to avoid unexpected
 results. For example, specify the same new name to identify the
 variation specific in VariationSpecifics and Pictures, (in addition to adding the new name here in ModifyNameList).
 
 
 type : NSString, wrapper for primitive string
*/
@property (nonatomic, retain) NSString *newName;

/**
 (public property)
 
 entry type : PicoAnyElement, wrapper for primitive anyelement
*/

@property (nonatomic, retain) NSMutableArray *any;


@end
