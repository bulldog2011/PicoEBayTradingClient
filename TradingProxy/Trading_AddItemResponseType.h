// Generated by xsd compiler for ios/objective-c
// DO NOT CHANGE!

#import <Foundation/Foundation.h>
#import "PicoClassSchema.h"
#import "PicoPropertySchema.h"
#import "PicoConstants.h"
#import "PicoBindable.h"
#import "Trading_AbstractResponseType.h"


@class Trading_ProductSuggestionsType;
@class Trading_FeesType;

/**
 
 Returns the item ID and the estimated fees for the new listing, as well as
 the start and end times of the listing.
 
 
 @ingroup EBayAPIInterface
*/
@interface Trading_AddItemResponseType : Trading_AbstractResponseType {

@private
    NSString *_itemID;
    NSDate *_startTime;
    NSDate *_endTime;
    Trading_FeesType *_fees;
    NSString *_categoryID;
    NSString *_category2ID;
    NSMutableArray *_discountReason;
    Trading_ProductSuggestionsType *_productSuggestions;

}


/**
 
 Unique item ID for the new listing.
 <br>
 <br>
 Applicable to Half.com.
 <br>
 <br>
 <span class="tablenote"><b>Note:</b>
 Although eBay represents item IDs as strings in the schema, we recommend you store
 them as 64-bit signed integers. If you choose to store item IDs as strings, allocate
 at least 19 characters (assuming decimal digits are used) to hold them. eBay will
 increase the size of IDs over time, and your code should be prepared to handle IDs of
 up to 19 digits. For more information about item IDs, see <a href="
 http://ebay.custhelp.com/cgi-bin/ebay.cfg/php/enduser/std_adp.php?p_faqid=468">
 Common FAQs on eBay Item IDs and other eBay IDs</a> in the Knowledge Base.
 </span>
 
 
 type : NSString, wrapper for primitive string
*/
@property (nonatomic, retain) NSString *itemID;

/**
 
 Starting date and time for the new listing.
 <br>
 <br>
 Applicable to Half.com (for Half.com, the start time is always the time the item was listed).
 
 
 type : NSDate, wrapper for primitive date
*/
@property (nonatomic, retain) NSDate *startTime;

/**
 
 Date and time when the new listing ends. This is the starting time plus the listing
 duration.
 <br>
 <br>
 Applicable to Half.com (for Half.com the actual end time is GTC, not the end time
 returned in the response).
 
 
 type : NSDate, wrapper for primitive date
*/
@property (nonatomic, retain) NSDate *endTime;

/**
 
 Child elements contain the estimated listing fees for the new item listing.
 The fees do not include the Final Value Fee (FVF), which cannot be determined
 until an item is sold.
 <br>
 <br>
 Applicable to Half.com, but the values are not applicable to Half.com listings.
 
 
 type : class Trading_FeesType
*/
@property (nonatomic, retain) Trading_FeesType *fees;

/**
 
 ID of the primary category in which the item was listed.
 Only returned if you set Item.CategoryMappingAllowed to true in the request
 and the ID you passed in PrimaryCategory was mapped to a new ID by eBay.
 If the primary category has not changed or it has expired with no replacement,
 CategoryID does not return a value.
 <br>
 <br>
 Not applicable to Half.com.
 
 
 type : NSString, wrapper for primitive string
*/
@property (nonatomic, retain) NSString *categoryID;

/**
 
 ID of the secondary category in which the item was listed.
 Only returned if you set Item.CategoryMappingAllowed to true in the request
 and the ID you passed in SecondaryCategory was mapped to a new ID by eBay.
 If the secondary category has not changed or it has expired with no replacement,
 Category2ID does not return a value.
 <br>
 <br>
 Not applicable to Half.com.
 
 
 type : NSString, wrapper for primitive string
*/
@property (nonatomic, retain) NSString *category2ID;

/**
 
 The nature of the discount, if a discount applied.
 
 
 entry type : string constant in Trading_DiscountReasonCodeType.h
*/

@property (nonatomic, retain) NSMutableArray *discountReason;

/**
 
 Provides a list of products recommended by eBay which match the item information
 provided by the seller.
 Not applicable to Half.com.
 
 
 type : class Trading_ProductSuggestionsType
*/
@property (nonatomic, retain) Trading_ProductSuggestionsType *productSuggestions;


@end
