// Generated by xsd compiler for ios/objective-c
// DO NOT CHANGE!

#import <Foundation/Foundation.h>
#import "Trading_SiteHostedPictureDetailsType.h"
#import "Trading_PictureSetMemberType.h"

@implementation Trading_SiteHostedPictureDetailsType

@synthesize pictureName = _pictureName;
@synthesize pictureSet = _pictureSet;
@synthesize pictureFormat = _pictureFormat;
@synthesize fullURL = _fullURL;
@synthesize baseURL = _baseURL;
@synthesize pictureSetMember = _pictureSetMember;
@synthesize externalPictureURL = _externalPictureURL;
@synthesize useByDate = _useByDate;
@synthesize any = _any;

// class meta-data method
// note: this method is only for internal use, DO NOT CHANGE!
+(PicoClassSchema *)getClassMetaData {
    return nil;
}

// property meta-data method
// note: this method is only for internal use, DO NOT CHANGE!
+(NSMutableDictionary *)getPropertyMetaData {
    NSMutableDictionary *map = [NSMutableDictionary dictionary];
    
    PicoPropertySchema *ps = nil;
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"PictureName" propertyName:@"pictureName" type:PICO_TYPE_STRING clazz:nil];
    [map setObject:ps forKey:@"pictureName"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"PictureSet" propertyName:@"pictureSet" type:PICO_TYPE_ENUM clazz:nil];
    [map setObject:ps forKey:@"pictureSet"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"PictureFormat" propertyName:@"pictureFormat" type:PICO_TYPE_ENUM clazz:nil];
    [map setObject:ps forKey:@"pictureFormat"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"FullURL" propertyName:@"fullURL" type:PICO_TYPE_STRING clazz:nil];
    [map setObject:ps forKey:@"fullURL"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"BaseURL" propertyName:@"baseURL" type:PICO_TYPE_STRING clazz:nil];
    [map setObject:ps forKey:@"baseURL"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT_ARRAY xmlName:@"PictureSetMember" propertyName:@"pictureSetMember" type:PICO_TYPE_OBJECT clazz:[Trading_PictureSetMemberType class]];
    [map setObject:ps forKey:@"pictureSetMember"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"ExternalPictureURL" propertyName:@"externalPictureURL" type:PICO_TYPE_STRING clazz:nil];
    [map setObject:ps forKey:@"externalPictureURL"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"UseByDate" propertyName:@"useByDate" type:PICO_TYPE_DATE clazz:nil];
    [map setObject:ps forKey:@"useByDate"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ANY_ELEMENT xmlName:@"any" propertyName:@"any" type:PICO_TYPE_ANYELEMENT clazz:nil];
    [map setObject:ps forKey:@"any"];
    [ps release];
    
    return map;
}



-(void)dealloc {
    self.pictureName = nil;
    self.pictureSet = nil;
    self.pictureFormat = nil;
    self.fullURL = nil;
    self.baseURL = nil;
    self.pictureSetMember = nil;
    self.externalPictureURL = nil;
    self.useByDate = nil;
    self.any = nil;
    [super dealloc];
}

@end
