// Generated by xsd compiler for ios/objective-c
// DO NOT CHANGE!

#import <Foundation/Foundation.h>
#import "Trading_GetUserDisputesResponseType.h"
#import "Trading_DisputeFilterCountType.h"
#import "Trading_PaginationResultType.h"
#import "Trading_DisputeArrayType.h"

@implementation Trading_GetUserDisputesResponseType

@synthesize startingDisputeID = _startingDisputeID;
@synthesize endingDisputeID = _endingDisputeID;
@synthesize disputeArray = _disputeArray;
@synthesize itemsPerPage = _itemsPerPage;
@synthesize pageNumber = _pageNumber;
@synthesize disputeFilterCount = _disputeFilterCount;
@synthesize paginationResult = _paginationResult;

// class meta-data method
// note: this method is only for internal use, DO NOT CHANGE!
+(PicoClassSchema *)getClassMetaData {
    PicoClassSchema *cs = [[PicoClassSchema alloc] initWithXmlName:@"GetUserDisputesResponse" nsUri:@"urn:ebay:apis:eBLBaseComponents"];
    [cs autorelease];
    return cs;
}

// property meta-data method
// note: this method is only for internal use, DO NOT CHANGE!
+(NSMutableDictionary *)getPropertyMetaData {
    NSMutableDictionary *map = [NSMutableDictionary dictionary];
    
    PicoPropertySchema *ps = nil;
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"StartingDisputeID" propertyName:@"startingDisputeID" type:PICO_TYPE_STRING clazz:nil];
    [map setObject:ps forKey:@"startingDisputeID"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"EndingDisputeID" propertyName:@"endingDisputeID" type:PICO_TYPE_STRING clazz:nil];
    [map setObject:ps forKey:@"endingDisputeID"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"DisputeArray" propertyName:@"disputeArray" type:PICO_TYPE_OBJECT clazz:[Trading_DisputeArrayType class]];
    [map setObject:ps forKey:@"disputeArray"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"ItemsPerPage" propertyName:@"itemsPerPage" type:PICO_TYPE_INT clazz:nil];
    [map setObject:ps forKey:@"itemsPerPage"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"PageNumber" propertyName:@"pageNumber" type:PICO_TYPE_INT clazz:nil];
    [map setObject:ps forKey:@"pageNumber"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT_ARRAY xmlName:@"DisputeFilterCount" propertyName:@"disputeFilterCount" type:PICO_TYPE_OBJECT clazz:[Trading_DisputeFilterCountType class]];
    [map setObject:ps forKey:@"disputeFilterCount"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"PaginationResult" propertyName:@"paginationResult" type:PICO_TYPE_OBJECT clazz:[Trading_PaginationResultType class]];
    [map setObject:ps forKey:@"paginationResult"];
    [ps release];
    
    return map;
}



-(void)dealloc {
    self.startingDisputeID = nil;
    self.endingDisputeID = nil;
    self.disputeArray = nil;
    self.itemsPerPage = nil;
    self.pageNumber = nil;
    self.disputeFilterCount = nil;
    self.paginationResult = nil;
    [super dealloc];
}

@end
