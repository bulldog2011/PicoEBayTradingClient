// Generated by xsd compiler for ios/objective-c
// DO NOT CHANGE!

#import <Foundation/Foundation.h>
#import "PicoClassSchema.h"
#import "PicoPropertySchema.h"
#import "PicoConstants.h"
#import "PicoBindable.h"


@class Trading_ValType;

/**
 
 This type is deprecated as <b>GetProduct*</b> calls were deprecated.
 
 
 
 @ingroup EBayAPIInterface
*/
@interface Trading_SearchAttributesType : NSObject <PicoBindable> {

@private
    NSNumber *_attributeID;
    NSString *_dateSpecifier;
    NSString *_rangeSpecifier;
    NSMutableArray *_valueList;
    NSMutableArray *_any;

}


/**
 
 
 Unique identifier for the attribute within the characteristic set.
 Required if SearchAttributes is specified.
 
 
 type : NSNumber, wrapper for primitive int
*/
@property (nonatomic, retain) NSNumber *attributeID;

/**
 
 
 Specifies the date sub-component that the attribute represents.
 This only applies to date attributes.
 Required when searching by date attributes.
 Allows for separate text fields or drop-down lists to be rendered for
 each sub-component. For example, the day, month, and year can be
 rendered as separate drop-down lists.
 
 
 type: string constant in Trading_DateSpecifierCodeType.h
*/
@property (nonatomic, retain) NSString *dateSpecifier;

/**
 
 
 Indicates that the attribute represents the high or low end in a range,
 such as a date range or a price range.
 Required when searching on ranges.
 
 
 type: string constant in Trading_RangeCodeType.h
*/
@property (nonatomic, retain) NSString *rangeSpecifier;

/**
 
 
 Container for the list of one or more valid values that the
 user has selected for
 the searchable attribute. If multiple values are specified,
 the search engine
 applies "OR" logic to the query (i.e., at least one of the
 specified values must match).
 Required if SearchAttributes is specified.
 
 
 entry type : class Trading_ValType
*/

@property (nonatomic, retain) NSMutableArray *valueList;

/**
 (public property)
 
 entry type : PicoAnyElement, wrapper for primitive anyelement
*/

@property (nonatomic, retain) NSMutableArray *any;


@end
