// Generated by xsd compiler for ios/objective-c
// DO NOT CHANGE!

#import <Foundation/Foundation.h>
#import "Trading_ApiAccessRuleType.h"

@implementation Trading_ApiAccessRuleType

@synthesize callName = _callName;
@synthesize countsTowardAggregate = _countsTowardAggregate;
@synthesize dailyHardLimit = _dailyHardLimit;
@synthesize dailySoftLimit = _dailySoftLimit;
@synthesize dailyUsage = _dailyUsage;
@synthesize hourlyHardLimit = _hourlyHardLimit;
@synthesize hourlySoftLimit = _hourlySoftLimit;
@synthesize hourlyUsage = _hourlyUsage;
@synthesize period = _period;
@synthesize periodicHardLimit = _periodicHardLimit;
@synthesize periodicSoftLimit = _periodicSoftLimit;
@synthesize periodicUsage = _periodicUsage;
@synthesize periodicStartDate = _periodicStartDate;
@synthesize modTime = _modTime;
@synthesize ruleCurrentStatus = _ruleCurrentStatus;
@synthesize ruleStatus = _ruleStatus;
@synthesize any = _any;

// class meta-data method
// note: this method is only for internal use, DO NOT CHANGE!
+(PicoClassSchema *)getClassMetaData {
    return nil;
}

// property meta-data method
// note: this method is only for internal use, DO NOT CHANGE!
+(NSMutableDictionary *)getPropertyMetaData {
    NSMutableDictionary *map = [NSMutableDictionary dictionary];
    
    PicoPropertySchema *ps = nil;
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"CallName" propertyName:@"callName" type:PICO_TYPE_STRING clazz:nil];
    [map setObject:ps forKey:@"callName"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"CountsTowardAggregate" propertyName:@"countsTowardAggregate" type:PICO_TYPE_BOOL clazz:nil];
    [map setObject:ps forKey:@"countsTowardAggregate"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"DailyHardLimit" propertyName:@"dailyHardLimit" type:PICO_TYPE_LONG clazz:nil];
    [map setObject:ps forKey:@"dailyHardLimit"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"DailySoftLimit" propertyName:@"dailySoftLimit" type:PICO_TYPE_LONG clazz:nil];
    [map setObject:ps forKey:@"dailySoftLimit"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"DailyUsage" propertyName:@"dailyUsage" type:PICO_TYPE_LONG clazz:nil];
    [map setObject:ps forKey:@"dailyUsage"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"HourlyHardLimit" propertyName:@"hourlyHardLimit" type:PICO_TYPE_LONG clazz:nil];
    [map setObject:ps forKey:@"hourlyHardLimit"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"HourlySoftLimit" propertyName:@"hourlySoftLimit" type:PICO_TYPE_LONG clazz:nil];
    [map setObject:ps forKey:@"hourlySoftLimit"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"HourlyUsage" propertyName:@"hourlyUsage" type:PICO_TYPE_LONG clazz:nil];
    [map setObject:ps forKey:@"hourlyUsage"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"Period" propertyName:@"period" type:PICO_TYPE_INT clazz:nil];
    [map setObject:ps forKey:@"period"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"PeriodicHardLimit" propertyName:@"periodicHardLimit" type:PICO_TYPE_LONG clazz:nil];
    [map setObject:ps forKey:@"periodicHardLimit"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"PeriodicSoftLimit" propertyName:@"periodicSoftLimit" type:PICO_TYPE_LONG clazz:nil];
    [map setObject:ps forKey:@"periodicSoftLimit"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"PeriodicUsage" propertyName:@"periodicUsage" type:PICO_TYPE_LONG clazz:nil];
    [map setObject:ps forKey:@"periodicUsage"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"PeriodicStartDate" propertyName:@"periodicStartDate" type:PICO_TYPE_DATE clazz:nil];
    [map setObject:ps forKey:@"periodicStartDate"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"ModTime" propertyName:@"modTime" type:PICO_TYPE_DATE clazz:nil];
    [map setObject:ps forKey:@"modTime"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"RuleCurrentStatus" propertyName:@"ruleCurrentStatus" type:PICO_TYPE_ENUM clazz:nil];
    [map setObject:ps forKey:@"ruleCurrentStatus"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"RuleStatus" propertyName:@"ruleStatus" type:PICO_TYPE_ENUM clazz:nil];
    [map setObject:ps forKey:@"ruleStatus"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ANY_ELEMENT xmlName:@"any" propertyName:@"any" type:PICO_TYPE_ANYELEMENT clazz:nil];
    [map setObject:ps forKey:@"any"];
    [ps release];
    
    return map;
}



-(void)dealloc {
    self.callName = nil;
    self.countsTowardAggregate = nil;
    self.dailyHardLimit = nil;
    self.dailySoftLimit = nil;
    self.dailyUsage = nil;
    self.hourlyHardLimit = nil;
    self.hourlySoftLimit = nil;
    self.hourlyUsage = nil;
    self.period = nil;
    self.periodicHardLimit = nil;
    self.periodicSoftLimit = nil;
    self.periodicUsage = nil;
    self.periodicStartDate = nil;
    self.modTime = nil;
    self.ruleCurrentStatus = nil;
    self.ruleStatus = nil;
    self.any = nil;
    [super dealloc];
}

@end
