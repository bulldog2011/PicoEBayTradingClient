// Generated by xsd compiler for ios/objective-c
// DO NOT CHANGE!

#import <Foundation/Foundation.h>
#import "PicoClassSchema.h"
#import "PicoPropertySchema.h"
#import "PicoConstants.h"
#import "PicoBindable.h"


@class Trading_AdditionalAccountType;
@class Trading_AmountType;

/**
 
 Summary data for the requesting user's seller account as a whole. This includes a
 balance for the account, any past due amount and date, and defining data for
 additional accounts (if the user has changed country of residency while having an
 active eBay account).
 
 
 @ingroup EBayAPIInterface
*/
@interface Trading_AccountSummaryType : NSObject <PicoBindable> {

@private
    NSString *_accountState;
    Trading_AmountType *_invoicePayment;
    Trading_AmountType *_invoiceCredit;
    Trading_AmountType *_invoiceNewFee;
    NSMutableArray *_additionalAccount;
    Trading_AmountType *_amountPastDue;
    NSString *_bankAccountInfo;
    NSDate *_bankModifyDate;
    NSNumber *_billingCycleDate;
    NSDate *_creditCardExpiration;
    NSString *_creditCardInfo;
    NSDate *_creditCardModifyDate;
    Trading_AmountType *_currentBalance;
    NSString *_email;
    Trading_AmountType *_invoiceBalance;
    NSDate *_invoiceDate;
    Trading_AmountType *_lastAmountPaid;
    NSDate *_lastPaymentDate;
    NSNumber *_pastDue;
    NSString *_paymentMethod;
    NSMutableArray *_any;

}


/**
 
 Indicates the current state of the account (such as active or inactive).
 Possible values are enumerated in the AccountStateCodeType code list.
 
 
 type: string constant in Trading_AccountStateCodeType.h
*/
@property (nonatomic, retain) NSString *accountState;

/**
 
 Specifies payment made since the previous invoice, but is
 returned only if AccountHistorySelection is LastInvoice or Specified
 Invoice. The value is positive for debits and negative for credits.
 
 
 type : class Trading_AmountType
*/
@property (nonatomic, retain) Trading_AmountType *invoicePayment;

/**
 
 Specifies credits granted since the previous invoice, but
 is only returned AccountHistorySelection is LastInvoice or Specified
 Invoice.
 The value is positive for debits and negative for credits.
 
 
 type : class Trading_AmountType
*/
@property (nonatomic, retain) Trading_AmountType *invoiceCredit;

/**
 
 Specifies fees incurred since the last invoice, including
 tax if applicable. Returned only if AccountHistorySelection
 is LastInvoice or Specified Invoice. The value is positive for debits and negative for credits.
 
 
 type : class Trading_AmountType
*/
@property (nonatomic, retain) Trading_AmountType *invoiceNewFee;

/**
 
 Contains the data for one additional account. An AccountSummaryType object
 may return zero, one, or multiple additional accounts. See the schema
 documentation for AdditionalAccountType for details on additional accounts.
 The value is positive for debits and negative for credits.
 
 
 entry type : class Trading_AdditionalAccountType
*/

@property (nonatomic, retain) NSMutableArray *additionalAccount;

/**
 
 Amount past due, 0.00 if not past due.
 The value is positive for debits and negative for credits.
 
 
 type : class Trading_AmountType
*/
@property (nonatomic, retain) Trading_AmountType *amountPastDue;

/**
 
 First four digits of the bank account the user associated with the seller
 account (with remainder Xed-out). This may be an empty string depending
 upon the payment type the user selected for the account (e.g., if no
 debit-card specified).
 
 
 type : NSString, wrapper for primitive string
*/
@property (nonatomic, retain) NSString *bankAccountInfo;

/**
 
 Indicates the date and time BankAccountInfo was last modified, in GMT.
 (Also see the Data Types appendix for more information on how GMT dates are
 handled in SOAP.) This may be an empty string depending upon the payment
 type the user selected for the account (e.g., if no debit-card specified).
 
 
 type : NSDate, wrapper for primitive date
*/
@property (nonatomic, retain) NSDate *bankModifyDate;

/**
 
 Indicates the billing cycle in which eBay sends a billing invoice to the
 user. A value of 0 (zero) indicates an invoice sent on the last day of the
 month. A value of 15 indicates an invoice sent on the 15th day of the
 month.
 
 
 type : NSNumber, wrapper for primitive int
*/
@property (nonatomic, retain) NSNumber *billingCycleDate;

/**
 
 Expiration date for the credit card selected by the user as payment method
 for the account, in GMT. (Also see the Data Types appendix for more
 information on how GMT dates are handled in SOAP.) Empty string if no
 credit card is on file or if the account is inactive - even if there is a
 credit card on file.
 
 
 type : NSDate, wrapper for primitive date
*/
@property (nonatomic, retain) NSDate *creditCardExpiration;

/**
 
 Last four digits of the credit card the user selected as payment method for
 the account. Empty string if no credit is on file.
 
 
 type : NSString, wrapper for primitive string
*/
@property (nonatomic, retain) NSString *creditCardInfo;

/**
 
 Indicates the date and time credit card or credit card expiration date was
 last modified, in GMT. (Also see the Data Types appendix for more
 information on how GMT dates are handled in SOAP.) This may be an empty
 string depending on the payment method the user selected for the account
 (e.g., Empty string if no credit card is on file.)
 
 
 type : NSDate, wrapper for primitive date
*/
@property (nonatomic, retain) NSDate *creditCardModifyDate;

/**
 
 Current balance for the account. Can be 0.00, positive, or negative.
 The value is positive for debits and negative for credits.
 
 
 type : class Trading_AmountType
*/
@property (nonatomic, retain) Trading_AmountType *currentBalance;

/**
 
 (out) Email address for the user. You cannot retrieve an email address for any
 user with whom you do not have a transactional relationship, regardless of
 site. Email is only returned for applicable calls when you are retrieving your
 own user data OR when you and the other user are in a transactional
 relationship and the call is being executed within a certain amount of time
 after the transaction is created.
 
 
 type : NSString, wrapper for primitive string
*/
@property (nonatomic, retain) NSString *email;

/**
 
 Amount of last invoice. 0.00 if account not yet invoiced.
 The value is positive for debits and negative for credits.
 
 
 type : class Trading_AmountType
*/
@property (nonatomic, retain) Trading_AmountType *invoiceBalance;

/**
 
 Date of last invoice sent by eBay to the user, in GMT. (Also see the Data
 Types appendix for more information on how GMT dates are handled in SOAP.)
 Empty string if this account has not been invoiced yet.
 
 
 type : NSDate, wrapper for primitive date
*/
@property (nonatomic, retain) NSDate *invoiceDate;

/**
 
 Amount of last payment posted, 0.00 if no payments posted.
 The value is positive for debits and negative for credits.
 
 
 type : class Trading_AmountType
*/
@property (nonatomic, retain) Trading_AmountType *lastAmountPaid;

/**
 
 Date of last payment by the user to eBay, in GMT. (Also see the Data Types
 appendix for more information on how GMT dates are handled in SOAP.) Empty
 string if no payments have been posted.
 
 
 type : NSDate, wrapper for primitive date
*/
@property (nonatomic, retain) NSDate *lastPaymentDate;

/**
 
 Indicates whether the account has past due amounts outstanding. A value of
 true indicates that the account is past due. A value of false indicates the
 account is current.
 
 
 type : NSNumber, wrapper for primitive bool
*/
@property (nonatomic, retain) NSNumber *pastDue;

/**
 
 Indicates the method the user selected to pay eBay with for the account.
 The values for PaymentMethod vary from one global eBay site to the next.
 Payment methods are enumerated in the SellerPaymentMethodCodeType code
 list.
 
 
 type: string constant in Trading_SellerPaymentMethodCodeType.h
*/
@property (nonatomic, retain) NSString *paymentMethod;

/**
 (public property)
 
 entry type : PicoAnyElement, wrapper for primitive anyelement
*/

@property (nonatomic, retain) NSMutableArray *any;


@end
