// Generated by wsdl compiler for ios/objective-c
// DO NOT CHANGE!


#import "EBayAPIInterface_SOAPClient.h"

@implementation EBayAPIInterface_SOAPClient

-(void)addDispute:(Trading_AddDisputeRequestType *) requestObject 
      success:(void (^)(Trading_AddDisputeResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"AddDispute" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_AddDisputeResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)addDisputeResponse:(Trading_AddDisputeResponseRequestType *) requestObject 
      success:(void (^)(Trading_AddDisputeResponseResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"AddDisputeResponse" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_AddDisputeResponseResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)addFixedPriceItem:(Trading_AddFixedPriceItemRequestType *) requestObject 
      success:(void (^)(Trading_AddFixedPriceItemResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"AddFixedPriceItem" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_AddFixedPriceItemResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)addItem:(Trading_AddItemRequestType *) requestObject 
      success:(void (^)(Trading_AddItemResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"AddItem" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_AddItemResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)addItemFromSellingManagerTemplate:(Trading_AddItemFromSellingManagerTemplateRequestType *) requestObject 
      success:(void (^)(Trading_AddItemFromSellingManagerTemplateResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"AddItemFromSellingManagerTemplate" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_AddItemFromSellingManagerTemplateResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)addItems:(Trading_AddItemsRequestType *) requestObject 
      success:(void (^)(Trading_AddItemsResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"AddItems" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_AddItemsResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)addMemberMessageAAQToPartner:(Trading_AddMemberMessageAAQToPartnerRequestType *) requestObject 
      success:(void (^)(Trading_AddMemberMessageAAQToPartnerResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"AddMemberMessageAAQToPartner" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_AddMemberMessageAAQToPartnerResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)addMemberMessageRTQ:(Trading_AddMemberMessageRTQRequestType *) requestObject 
      success:(void (^)(Trading_AddMemberMessageRTQResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"AddMemberMessageRTQ" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_AddMemberMessageRTQResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)addMemberMessagesAAQToBidder:(Trading_AddMemberMessagesAAQToBidderRequestType *) requestObject 
      success:(void (^)(Trading_AddMemberMessagesAAQToBidderResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"AddMemberMessagesAAQToBidder" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_AddMemberMessagesAAQToBidderResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)addOrder:(Trading_AddOrderRequestType *) requestObject 
      success:(void (^)(Trading_AddOrderResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"AddOrder" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_AddOrderResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)addSecondChanceItem:(Trading_AddSecondChanceItemRequestType *) requestObject 
      success:(void (^)(Trading_AddSecondChanceItemResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"AddSecondChanceItem" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_AddSecondChanceItemResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)addSellingManagerInventoryFolder:(Trading_AddSellingManagerInventoryFolderRequestType *) requestObject 
      success:(void (^)(Trading_AddSellingManagerInventoryFolderResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"AddSellingManagerInventoryFolder" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_AddSellingManagerInventoryFolderResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)addSellingManagerProduct:(Trading_AddSellingManagerProductRequestType *) requestObject 
      success:(void (^)(Trading_AddSellingManagerProductResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"AddSellingManagerProduct" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_AddSellingManagerProductResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)addSellingManagerTemplate:(Trading_AddSellingManagerTemplateRequestType *) requestObject 
      success:(void (^)(Trading_AddSellingManagerTemplateResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"AddSellingManagerTemplate" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_AddSellingManagerTemplateResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)addToItemDescription:(Trading_AddToItemDescriptionRequestType *) requestObject 
      success:(void (^)(Trading_AddToItemDescriptionResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"AddToItemDescription" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_AddToItemDescriptionResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)addToWatchList:(Trading_AddToWatchListRequestType *) requestObject 
      success:(void (^)(Trading_AddToWatchListResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"AddToWatchList" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_AddToWatchListResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)addTransactionConfirmationItem:(Trading_AddTransactionConfirmationItemRequestType *) requestObject 
      success:(void (^)(Trading_AddTransactionConfirmationItemResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"AddTransactionConfirmationItem" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_AddTransactionConfirmationItemResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)completeSale:(Trading_CompleteSaleRequestType *) requestObject 
      success:(void (^)(Trading_CompleteSaleResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"CompleteSale" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_CompleteSaleResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)confirmIdentity:(Trading_ConfirmIdentityRequestType *) requestObject 
      success:(void (^)(Trading_ConfirmIdentityResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"ConfirmIdentity" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_ConfirmIdentityResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)deleteMyMessages:(Trading_DeleteMyMessagesRequestType *) requestObject 
      success:(void (^)(Trading_DeleteMyMessagesResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"DeleteMyMessages" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_DeleteMyMessagesResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)deleteSellingManagerInventoryFolder:(Trading_DeleteSellingManagerInventoryFolderRequestType *) requestObject 
      success:(void (^)(Trading_DeleteSellingManagerInventoryFolderResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"DeleteSellingManagerInventoryFolder" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_DeleteSellingManagerInventoryFolderResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)deleteSellingManagerItemAutomationRule:(Trading_DeleteSellingManagerItemAutomationRuleRequestType *) requestObject 
      success:(void (^)(Trading_DeleteSellingManagerItemAutomationRuleResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"DeleteSellingManagerItemAutomationRule" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_DeleteSellingManagerItemAutomationRuleResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)deleteSellingManagerProduct:(Trading_DeleteSellingManagerProductRequestType *) requestObject 
      success:(void (^)(Trading_DeleteSellingManagerProductResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"DeleteSellingManagerProduct" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_DeleteSellingManagerProductResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)deleteSellingManagerTemplate:(Trading_DeleteSellingManagerTemplateRequestType *) requestObject 
      success:(void (^)(Trading_DeleteSellingManagerTemplateResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"DeleteSellingManagerTemplate" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_DeleteSellingManagerTemplateResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)deleteSellingManagerTemplateAutomationRule:(Trading_DeleteSellingManagerTemplateAutomationRuleRequestType *) requestObject 
      success:(void (^)(Trading_DeleteSellingManagerTemplateAutomationRuleResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"DeleteSellingManagerTemplateAutomationRule" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_DeleteSellingManagerTemplateAutomationRuleResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)disableUnpaidItemAssistance:(Trading_DisableUnpaidItemAssistanceRequestType *) requestObject 
      success:(void (^)(Trading_DisableUnpaidItemAssistanceResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"DisableUnpaidItemAssistance" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_DisableUnpaidItemAssistanceResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)endFixedPriceItem:(Trading_EndFixedPriceItemRequestType *) requestObject 
      success:(void (^)(Trading_EndFixedPriceItemResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"EndFixedPriceItem" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_EndFixedPriceItemResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)endItem:(Trading_EndItemRequestType *) requestObject 
      success:(void (^)(Trading_EndItemResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"EndItem" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_EndItemResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)endItems:(Trading_EndItemsRequestType *) requestObject 
      success:(void (^)(Trading_EndItemsResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"EndItems" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_EndItemsResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)extendSiteHostedPictures:(Trading_ExtendSiteHostedPicturesRequestType *) requestObject 
      success:(void (^)(Trading_ExtendSiteHostedPicturesResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"ExtendSiteHostedPictures" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_ExtendSiteHostedPicturesResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)fetchToken:(Trading_FetchTokenRequestType *) requestObject 
      success:(void (^)(Trading_FetchTokenResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"FetchToken" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_FetchTokenResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)getAccount:(Trading_GetAccountRequestType *) requestObject 
      success:(void (^)(Trading_GetAccountResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"GetAccount" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_GetAccountResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)getAdFormatLeads:(Trading_GetAdFormatLeadsRequestType *) requestObject 
      success:(void (^)(Trading_GetAdFormatLeadsResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"GetAdFormatLeads" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_GetAdFormatLeadsResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)getAllBidders:(Trading_GetAllBiddersRequestType *) requestObject 
      success:(void (^)(Trading_GetAllBiddersResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"GetAllBidders" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_GetAllBiddersResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)getApiAccessRules:(Trading_GetApiAccessRulesRequestType *) requestObject 
      success:(void (^)(Trading_GetApiAccessRulesResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"GetApiAccessRules" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_GetApiAccessRulesResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)getAttributesCS:(Trading_GetAttributesCSRequestType *) requestObject 
      success:(void (^)(Trading_GetAttributesCSResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"GetAttributesCS" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_GetAttributesCSResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)getAttributesXSL:(Trading_GetAttributesXSLRequestType *) requestObject 
      success:(void (^)(Trading_GetAttributesXSLResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"GetAttributesXSL" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_GetAttributesXSLResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)getBestOffers:(Trading_GetBestOffersRequestType *) requestObject 
      success:(void (^)(Trading_GetBestOffersResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"GetBestOffers" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_GetBestOffersResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)getBidderList:(Trading_GetBidderListRequestType *) requestObject 
      success:(void (^)(Trading_GetBidderListResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"GetBidderList" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_GetBidderListResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)getCategories:(Trading_GetCategoriesRequestType *) requestObject 
      success:(void (^)(Trading_GetCategoriesResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"GetCategories" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_GetCategoriesResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)getCategory2CS:(Trading_GetCategory2CSRequestType *) requestObject 
      success:(void (^)(Trading_GetCategory2CSResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"GetCategory2CS" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_GetCategory2CSResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)getCategoryFeatures:(Trading_GetCategoryFeaturesRequestType *) requestObject 
      success:(void (^)(Trading_GetCategoryFeaturesResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"GetCategoryFeatures" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_GetCategoryFeaturesResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)getCategoryMappings:(Trading_GetCategoryMappingsRequestType *) requestObject 
      success:(void (^)(Trading_GetCategoryMappingsResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"GetCategoryMappings" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_GetCategoryMappingsResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)getCategorySpecifics:(Trading_GetCategorySpecificsRequestType *) requestObject 
      success:(void (^)(Trading_GetCategorySpecificsResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"GetCategorySpecifics" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_GetCategorySpecificsResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)getChallengeToken:(Trading_GetChallengeTokenRequestType *) requestObject 
      success:(void (^)(Trading_GetChallengeTokenResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"GetChallengeToken" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_GetChallengeTokenResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)getCharities:(Trading_GetCharitiesRequestType *) requestObject 
      success:(void (^)(Trading_GetCharitiesResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"GetCharities" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_GetCharitiesResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)getClientAlertsAuthToken:(Trading_GetClientAlertsAuthTokenRequestType *) requestObject 
      success:(void (^)(Trading_GetClientAlertsAuthTokenResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"GetClientAlertsAuthToken" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_GetClientAlertsAuthTokenResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)getContextualKeywords:(Trading_GetContextualKeywordsRequestType *) requestObject 
      success:(void (^)(Trading_GetContextualKeywordsResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"GetContextualKeywords" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_GetContextualKeywordsResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)getCrossPromotions:(Trading_GetCrossPromotionsRequestType *) requestObject 
      success:(void (^)(Trading_GetCrossPromotionsResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"GetCrossPromotions" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_GetCrossPromotionsResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)getDescriptionTemplates:(Trading_GetDescriptionTemplatesRequestType *) requestObject 
      success:(void (^)(Trading_GetDescriptionTemplatesResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"GetDescriptionTemplates" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_GetDescriptionTemplatesResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)getDispute:(Trading_GetDisputeRequestType *) requestObject 
      success:(void (^)(Trading_GetDisputeResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"GetDispute" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_GetDisputeResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)getFeedback:(Trading_GetFeedbackRequestType *) requestObject 
      success:(void (^)(Trading_GetFeedbackResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"GetFeedback" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_GetFeedbackResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)getItem:(Trading_GetItemRequestType *) requestObject 
      success:(void (^)(Trading_GetItemResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"GetItem" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_GetItemResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)getItemRecommendations:(Trading_GetItemRecommendationsRequestType *) requestObject 
      success:(void (^)(Trading_GetItemRecommendationsResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"GetItemRecommendations" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_GetItemRecommendationsResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)getItemShipping:(Trading_GetItemShippingRequestType *) requestObject 
      success:(void (^)(Trading_GetItemShippingResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"GetItemShipping" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_GetItemShippingResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)getItemTransactions:(Trading_GetItemTransactionsRequestType *) requestObject 
      success:(void (^)(Trading_GetItemTransactionsResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"GetItemTransactions" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_GetItemTransactionsResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)getItemsAwaitingFeedback:(Trading_GetItemsAwaitingFeedbackRequestType *) requestObject 
      success:(void (^)(Trading_GetItemsAwaitingFeedbackResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"GetItemsAwaitingFeedback" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_GetItemsAwaitingFeedbackResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)getMemberMessages:(Trading_GetMemberMessagesRequestType *) requestObject 
      success:(void (^)(Trading_GetMemberMessagesResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"GetMemberMessages" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_GetMemberMessagesResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)getMessagePreferences:(Trading_GetMessagePreferencesRequestType *) requestObject 
      success:(void (^)(Trading_GetMessagePreferencesResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"GetMessagePreferences" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_GetMessagePreferencesResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)getMyMessages:(Trading_GetMyMessagesRequestType *) requestObject 
      success:(void (^)(Trading_GetMyMessagesResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"GetMyMessages" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_GetMyMessagesResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)getMyeBayBuying:(Trading_GetMyeBayBuyingRequestType *) requestObject 
      success:(void (^)(Trading_GetMyeBayBuyingResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"GetMyeBayBuying" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_GetMyeBayBuyingResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)getMyeBayReminders:(Trading_GetMyeBayRemindersRequestType *) requestObject 
      success:(void (^)(Trading_GetMyeBayRemindersResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"GetMyeBayReminders" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_GetMyeBayRemindersResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)getMyeBaySelling:(Trading_GetMyeBaySellingRequestType *) requestObject 
      success:(void (^)(Trading_GetMyeBaySellingResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"GetMyeBaySelling" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_GetMyeBaySellingResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)getNotificationPreferences:(Trading_GetNotificationPreferencesRequestType *) requestObject 
      success:(void (^)(Trading_GetNotificationPreferencesResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"GetNotificationPreferences" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_GetNotificationPreferencesResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)getNotificationsUsage:(Trading_GetNotificationsUsageRequestType *) requestObject 
      success:(void (^)(Trading_GetNotificationsUsageResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"GetNotificationsUsage" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_GetNotificationsUsageResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)getOrderTransactions:(Trading_GetOrderTransactionsRequestType *) requestObject 
      success:(void (^)(Trading_GetOrderTransactionsResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"GetOrderTransactions" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_GetOrderTransactionsResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)getOrders:(Trading_GetOrdersRequestType *) requestObject 
      success:(void (^)(Trading_GetOrdersResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"GetOrders" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_GetOrdersResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)getProductFamilyMembers:(Trading_GetProductFamilyMembersRequestType *) requestObject 
      success:(void (^)(Trading_GetProductFamilyMembersResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"GetProductFamilyMembers" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_GetProductFamilyMembersResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)getProductFinder:(Trading_GetProductFinderRequestType *) requestObject 
      success:(void (^)(Trading_GetProductFinderResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"GetProductFinder" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_GetProductFinderResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)getProductFinderXSL:(Trading_GetProductFinderXSLRequestType *) requestObject 
      success:(void (^)(Trading_GetProductFinderXSLResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"GetProductFinderXSL" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_GetProductFinderXSLResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)getProductSearchPage:(Trading_GetProductSearchPageRequestType *) requestObject 
      success:(void (^)(Trading_GetProductSearchPageResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"GetProductSearchPage" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_GetProductSearchPageResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)getProductSearchResults:(Trading_GetProductSearchResultsRequestType *) requestObject 
      success:(void (^)(Trading_GetProductSearchResultsResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"GetProductSearchResults" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_GetProductSearchResultsResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)getProductSellingPages:(Trading_GetProductSellingPagesRequestType *) requestObject 
      success:(void (^)(Trading_GetProductSellingPagesResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"GetProductSellingPages" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_GetProductSellingPagesResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)getPromotionRules:(Trading_GetPromotionRulesRequestType *) requestObject 
      success:(void (^)(Trading_GetPromotionRulesResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"GetPromotionRules" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_GetPromotionRulesResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)getPromotionalSaleDetails:(Trading_GetPromotionalSaleDetailsRequestType *) requestObject 
      success:(void (^)(Trading_GetPromotionalSaleDetailsResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"GetPromotionalSaleDetails" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_GetPromotionalSaleDetailsResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)getSellerDashboard:(Trading_GetSellerDashboardRequestType *) requestObject 
      success:(void (^)(Trading_GetSellerDashboardResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"GetSellerDashboard" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_GetSellerDashboardResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)getSellerEvents:(Trading_GetSellerEventsRequestType *) requestObject 
      success:(void (^)(Trading_GetSellerEventsResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"GetSellerEvents" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_GetSellerEventsResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)getSellerList:(Trading_GetSellerListRequestType *) requestObject 
      success:(void (^)(Trading_GetSellerListResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"GetSellerList" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_GetSellerListResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)getSellerPayments:(Trading_GetSellerPaymentsRequestType *) requestObject 
      success:(void (^)(Trading_GetSellerPaymentsResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"GetSellerPayments" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_GetSellerPaymentsResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)getSellerTransactions:(Trading_GetSellerTransactionsRequestType *) requestObject 
      success:(void (^)(Trading_GetSellerTransactionsResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"GetSellerTransactions" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_GetSellerTransactionsResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)getSellingManagerAlerts:(Trading_GetSellingManagerAlertsRequestType *) requestObject 
      success:(void (^)(Trading_GetSellingManagerAlertsResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"GetSellingManagerAlerts" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_GetSellingManagerAlertsResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)getSellingManagerEmailLog:(Trading_GetSellingManagerEmailLogRequestType *) requestObject 
      success:(void (^)(Trading_GetSellingManagerEmailLogResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"GetSellingManagerEmailLog" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_GetSellingManagerEmailLogResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)getSellingManagerInventory:(Trading_GetSellingManagerInventoryRequestType *) requestObject 
      success:(void (^)(Trading_GetSellingManagerInventoryResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"GetSellingManagerInventory" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_GetSellingManagerInventoryResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)getSellingManagerInventoryFolder:(Trading_GetSellingManagerInventoryFolderRequestType *) requestObject 
      success:(void (^)(Trading_GetSellingManagerInventoryFolderResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"GetSellingManagerInventoryFolder" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_GetSellingManagerInventoryFolderResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)getSellingManagerItemAutomationRule:(Trading_GetSellingManagerItemAutomationRuleRequestType *) requestObject 
      success:(void (^)(Trading_GetSellingManagerItemAutomationRuleResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"GetSellingManagerItemAutomationRule" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_GetSellingManagerItemAutomationRuleResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)getSellingManagerSaleRecord:(Trading_GetSellingManagerSaleRecordRequestType *) requestObject 
      success:(void (^)(Trading_GetSellingManagerSaleRecordResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"GetSellingManagerSaleRecord" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_GetSellingManagerSaleRecordResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)getSellingManagerSoldListings:(Trading_GetSellingManagerSoldListingsRequestType *) requestObject 
      success:(void (^)(Trading_GetSellingManagerSoldListingsResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"GetSellingManagerSoldListings" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_GetSellingManagerSoldListingsResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)getSellingManagerTemplateAutomationRule:(Trading_GetSellingManagerTemplateAutomationRuleRequestType *) requestObject 
      success:(void (^)(Trading_GetSellingManagerTemplateAutomationRuleResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"GetSellingManagerTemplateAutomationRule" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_GetSellingManagerTemplateAutomationRuleResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)getSellingManagerTemplates:(Trading_GetSellingManagerTemplatesRequestType *) requestObject 
      success:(void (^)(Trading_GetSellingManagerTemplatesResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"GetSellingManagerTemplates" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_GetSellingManagerTemplatesResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)getSessionID:(Trading_GetSessionIDRequestType *) requestObject 
      success:(void (^)(Trading_GetSessionIDResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"GetSessionID" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_GetSessionIDResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)getShippingDiscountProfiles:(Trading_GetShippingDiscountProfilesRequestType *) requestObject 
      success:(void (^)(Trading_GetShippingDiscountProfilesResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"GetShippingDiscountProfiles" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_GetShippingDiscountProfilesResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)getStore:(Trading_GetStoreRequestType *) requestObject 
      success:(void (^)(Trading_GetStoreResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"GetStore" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_GetStoreResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)getStoreCategoryUpdateStatus:(Trading_GetStoreCategoryUpdateStatusRequestType *) requestObject 
      success:(void (^)(Trading_GetStoreCategoryUpdateStatusResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"GetStoreCategoryUpdateStatus" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_GetStoreCategoryUpdateStatusResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)getStoreCustomPage:(Trading_GetStoreCustomPageRequestType *) requestObject 
      success:(void (^)(Trading_GetStoreCustomPageResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"GetStoreCustomPage" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_GetStoreCustomPageResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)getStoreOptions:(Trading_GetStoreOptionsRequestType *) requestObject 
      success:(void (^)(Trading_GetStoreOptionsResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"GetStoreOptions" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_GetStoreOptionsResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)getStorePreferences:(Trading_GetStorePreferencesRequestType *) requestObject 
      success:(void (^)(Trading_GetStorePreferencesResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"GetStorePreferences" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_GetStorePreferencesResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)getSuggestedCategories:(Trading_GetSuggestedCategoriesRequestType *) requestObject 
      success:(void (^)(Trading_GetSuggestedCategoriesResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"GetSuggestedCategories" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_GetSuggestedCategoriesResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)getTaxTable:(Trading_GetTaxTableRequestType *) requestObject 
      success:(void (^)(Trading_GetTaxTableResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"GetTaxTable" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_GetTaxTableResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)getTokenStatus:(Trading_GetTokenStatusRequestType *) requestObject 
      success:(void (^)(Trading_GetTokenStatusResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"GetTokenStatus" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_GetTokenStatusResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)getUser:(Trading_GetUserRequestType *) requestObject 
      success:(void (^)(Trading_GetUserResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"GetUser" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_GetUserResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)getUserContactDetails:(Trading_GetUserContactDetailsRequestType *) requestObject 
      success:(void (^)(Trading_GetUserContactDetailsResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"GetUserContactDetails" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_GetUserContactDetailsResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)getUserDisputes:(Trading_GetUserDisputesRequestType *) requestObject 
      success:(void (^)(Trading_GetUserDisputesResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"GetUserDisputes" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_GetUserDisputesResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)getUserPreferences:(Trading_GetUserPreferencesRequestType *) requestObject 
      success:(void (^)(Trading_GetUserPreferencesResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"GetUserPreferences" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_GetUserPreferencesResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)getVeROReasonCodeDetails:(Trading_GetVeROReasonCodeDetailsRequestType *) requestObject 
      success:(void (^)(Trading_GetVeROReasonCodeDetailsResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"GetVeROReasonCodeDetails" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_GetVeROReasonCodeDetailsResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)getVeROReportStatus:(Trading_GetVeROReportStatusRequestType *) requestObject 
      success:(void (^)(Trading_GetVeROReportStatusResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"GetVeROReportStatus" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_GetVeROReportStatusResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)getWantItNowPost:(Trading_GetWantItNowPostRequestType *) requestObject 
      success:(void (^)(Trading_GetWantItNowPostResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"GetWantItNowPost" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_GetWantItNowPostResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)getWantItNowSearchResults:(Trading_GetWantItNowSearchResultsRequestType *) requestObject 
      success:(void (^)(Trading_GetWantItNowSearchResultsResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"GetWantItNowSearchResults" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_GetWantItNowSearchResultsResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)geteBayDetails:(Trading_GeteBayDetailsRequestType *) requestObject 
      success:(void (^)(Trading_GeteBayDetailsResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"GeteBayDetails" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_GeteBayDetailsResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)geteBayOfficialTime:(Trading_GeteBayOfficialTimeRequestType *) requestObject 
      success:(void (^)(Trading_GeteBayOfficialTimeResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"GeteBayOfficialTime" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_GeteBayOfficialTimeResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)issueRefund:(Trading_IssueRefundRequestType *) requestObject 
      success:(void (^)(Trading_IssueRefundResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"IssueRefund" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_IssueRefundResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)leaveFeedback:(Trading_LeaveFeedbackRequestType *) requestObject 
      success:(void (^)(Trading_LeaveFeedbackResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"LeaveFeedback" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_LeaveFeedbackResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)moveSellingManagerInventoryFolder:(Trading_MoveSellingManagerInventoryFolderRequestType *) requestObject 
      success:(void (^)(Trading_MoveSellingManagerInventoryFolderResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"MoveSellingManagerInventoryFolder" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_MoveSellingManagerInventoryFolderResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)placeOffer:(Trading_PlaceOfferRequestType *) requestObject 
      success:(void (^)(Trading_PlaceOfferResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"PlaceOffer" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_PlaceOfferResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)relistFixedPriceItem:(Trading_RelistFixedPriceItemRequestType *) requestObject 
      success:(void (^)(Trading_RelistFixedPriceItemResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"RelistFixedPriceItem" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_RelistFixedPriceItemResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)relistItem:(Trading_RelistItemRequestType *) requestObject 
      success:(void (^)(Trading_RelistItemResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"RelistItem" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_RelistItemResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)removeFromWatchList:(Trading_RemoveFromWatchListRequestType *) requestObject 
      success:(void (^)(Trading_RemoveFromWatchListResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"RemoveFromWatchList" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_RemoveFromWatchListResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)respondToBestOffer:(Trading_RespondToBestOfferRequestType *) requestObject 
      success:(void (^)(Trading_RespondToBestOfferResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"RespondToBestOffer" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_RespondToBestOfferResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)respondToFeedback:(Trading_RespondToFeedbackRequestType *) requestObject 
      success:(void (^)(Trading_RespondToFeedbackResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"RespondToFeedback" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_RespondToFeedbackResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)respondToWantItNowPost:(Trading_RespondToWantItNowPostRequestType *) requestObject 
      success:(void (^)(Trading_RespondToWantItNowPostResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"RespondToWantItNowPost" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_RespondToWantItNowPostResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)reviseCheckoutStatus:(Trading_ReviseCheckoutStatusRequestType *) requestObject 
      success:(void (^)(Trading_ReviseCheckoutStatusResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"ReviseCheckoutStatus" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_ReviseCheckoutStatusResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)reviseFixedPriceItem:(Trading_ReviseFixedPriceItemRequestType *) requestObject 
      success:(void (^)(Trading_ReviseFixedPriceItemResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"ReviseFixedPriceItem" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_ReviseFixedPriceItemResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)reviseInventoryStatus:(Trading_ReviseInventoryStatusRequestType *) requestObject 
      success:(void (^)(Trading_ReviseInventoryStatusResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"ReviseInventoryStatus" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_ReviseInventoryStatusResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)reviseItem:(Trading_ReviseItemRequestType *) requestObject 
      success:(void (^)(Trading_ReviseItemResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"ReviseItem" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_ReviseItemResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)reviseMyMessages:(Trading_ReviseMyMessagesRequestType *) requestObject 
      success:(void (^)(Trading_ReviseMyMessagesResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"ReviseMyMessages" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_ReviseMyMessagesResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)reviseMyMessagesFolders:(Trading_ReviseMyMessagesFoldersRequestType *) requestObject 
      success:(void (^)(Trading_ReviseMyMessagesFoldersResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"ReviseMyMessagesFolders" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_ReviseMyMessagesFoldersResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)reviseSellingManagerInventoryFolder:(Trading_ReviseSellingManagerInventoryFolderRequestType *) requestObject 
      success:(void (^)(Trading_ReviseSellingManagerInventoryFolderResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"ReviseSellingManagerInventoryFolder" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_ReviseSellingManagerInventoryFolderResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)reviseSellingManagerProduct:(Trading_ReviseSellingManagerProductRequestType *) requestObject 
      success:(void (^)(Trading_ReviseSellingManagerProductResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"ReviseSellingManagerProduct" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_ReviseSellingManagerProductResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)reviseSellingManagerSaleRecord:(Trading_ReviseSellingManagerSaleRecordRequestType *) requestObject 
      success:(void (^)(Trading_ReviseSellingManagerSaleRecordResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"ReviseSellingManagerSaleRecord" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_ReviseSellingManagerSaleRecordResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)reviseSellingManagerTemplate:(Trading_ReviseSellingManagerTemplateRequestType *) requestObject 
      success:(void (^)(Trading_ReviseSellingManagerTemplateResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"ReviseSellingManagerTemplate" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_ReviseSellingManagerTemplateResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)revokeToken:(Trading_RevokeTokenRequestType *) requestObject 
      success:(void (^)(Trading_RevokeTokenResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"RevokeToken" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_RevokeTokenResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)saveItemToSellingManagerTemplate:(Trading_SaveItemToSellingManagerTemplateRequestType *) requestObject 
      success:(void (^)(Trading_SaveItemToSellingManagerTemplateResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"SaveItemToSellingManagerTemplate" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_SaveItemToSellingManagerTemplateResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)sellerReverseDispute:(Trading_SellerReverseDisputeRequestType *) requestObject 
      success:(void (^)(Trading_SellerReverseDisputeResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"SellerReverseDispute" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_SellerReverseDisputeResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)sendInvoice:(Trading_SendInvoiceRequestType *) requestObject 
      success:(void (^)(Trading_SendInvoiceResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"SendInvoice" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_SendInvoiceResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)setMessagePreferences:(Trading_SetMessagePreferencesRequestType *) requestObject 
      success:(void (^)(Trading_SetMessagePreferencesResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"SetMessagePreferences" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_SetMessagePreferencesResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)setNotificationPreferences:(Trading_SetNotificationPreferencesRequestType *) requestObject 
      success:(void (^)(Trading_SetNotificationPreferencesResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"SetNotificationPreferences" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_SetNotificationPreferencesResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)setPromotionalSale:(Trading_SetPromotionalSaleRequestType *) requestObject 
      success:(void (^)(Trading_SetPromotionalSaleResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"SetPromotionalSale" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_SetPromotionalSaleResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)setPromotionalSaleListings:(Trading_SetPromotionalSaleListingsRequestType *) requestObject 
      success:(void (^)(Trading_SetPromotionalSaleListingsResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"SetPromotionalSaleListings" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_SetPromotionalSaleListingsResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)setSellingManagerFeedbackOptions:(Trading_SetSellingManagerFeedbackOptionsRequestType *) requestObject 
      success:(void (^)(Trading_SetSellingManagerFeedbackOptionsResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"SetSellingManagerFeedbackOptions" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_SetSellingManagerFeedbackOptionsResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)setSellingManagerItemAutomationRule:(Trading_SetSellingManagerItemAutomationRuleRequestType *) requestObject 
      success:(void (^)(Trading_SetSellingManagerItemAutomationRuleResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"SetSellingManagerItemAutomationRule" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_SetSellingManagerItemAutomationRuleResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)setSellingManagerTemplateAutomationRule:(Trading_SetSellingManagerTemplateAutomationRuleRequestType *) requestObject 
      success:(void (^)(Trading_SetSellingManagerTemplateAutomationRuleResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"SetSellingManagerTemplateAutomationRule" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_SetSellingManagerTemplateAutomationRuleResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)setShippingDiscountProfiles:(Trading_SetShippingDiscountProfilesRequestType *) requestObject 
      success:(void (^)(Trading_SetShippingDiscountProfilesResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"SetShippingDiscountProfiles" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_SetShippingDiscountProfilesResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)setStore:(Trading_SetStoreRequestType *) requestObject 
      success:(void (^)(Trading_SetStoreResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"SetStore" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_SetStoreResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)setStoreCategories:(Trading_SetStoreCategoriesRequestType *) requestObject 
      success:(void (^)(Trading_SetStoreCategoriesResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"SetStoreCategories" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_SetStoreCategoriesResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)setStoreCustomPage:(Trading_SetStoreCustomPageRequestType *) requestObject 
      success:(void (^)(Trading_SetStoreCustomPageResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"SetStoreCustomPage" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_SetStoreCustomPageResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)setStorePreferences:(Trading_SetStorePreferencesRequestType *) requestObject 
      success:(void (^)(Trading_SetStorePreferencesResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"SetStorePreferences" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_SetStorePreferencesResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)setTaxTable:(Trading_SetTaxTableRequestType *) requestObject 
      success:(void (^)(Trading_SetTaxTableResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"SetTaxTable" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_SetTaxTableResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)setUserNotes:(Trading_SetUserNotesRequestType *) requestObject 
      success:(void (^)(Trading_SetUserNotesResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"SetUserNotes" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_SetUserNotesResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)setUserPreferences:(Trading_SetUserPreferencesRequestType *) requestObject 
      success:(void (^)(Trading_SetUserPreferencesResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"SetUserPreferences" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_SetUserPreferencesResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)uploadSiteHostedPictures:(Trading_UploadSiteHostedPicturesRequestType *) requestObject 
      success:(void (^)(Trading_UploadSiteHostedPicturesResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"UploadSiteHostedPictures" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_UploadSiteHostedPicturesResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)validateChallengeInput:(Trading_ValidateChallengeInputRequestType *) requestObject 
      success:(void (^)(Trading_ValidateChallengeInputResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"ValidateChallengeInput" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_ValidateChallengeInputResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)validateTestUserRegistration:(Trading_ValidateTestUserRegistrationRequestType *) requestObject 
      success:(void (^)(Trading_ValidateTestUserRegistrationResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"ValidateTestUserRegistration" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_ValidateTestUserRegistrationResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)veROReportItems:(Trading_VeROReportItemsRequestType *) requestObject 
      success:(void (^)(Trading_VeROReportItemsResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"VeROReportItems" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_VeROReportItemsResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)verifyAddFixedPriceItem:(Trading_VerifyAddFixedPriceItemRequestType *) requestObject 
      success:(void (^)(Trading_VerifyAddFixedPriceItemResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"VerifyAddFixedPriceItem" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_VerifyAddFixedPriceItemResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)verifyAddItem:(Trading_VerifyAddItemRequestType *) requestObject 
      success:(void (^)(Trading_VerifyAddItemResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"VerifyAddItem" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_VerifyAddItemResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)verifyAddSecondChanceItem:(Trading_VerifyAddSecondChanceItemRequestType *) requestObject 
      success:(void (^)(Trading_VerifyAddSecondChanceItemResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"VerifyAddSecondChanceItem" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_VerifyAddSecondChanceItemResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}

-(void)verifyRelistItem:(Trading_VerifyRelistItemRequestType *) requestObject 
      success:(void (^)(Trading_VerifyRelistItemResponseType *responseObject))success
      failure:(void (^)(NSError *error, id<PicoBindable> soapFault))failure {
 
     [self.additionalParameters setObject: @"VerifyRelistItem" forKey: @"callname"];
     if(!requestObject.version) {
        requestObject.version = [self.additionalParameters objectForKey:@"version"];
     }
 
     [super invoke:requestObject responseClass:[Trading_VerifyRelistItemResponseType class]
     success:^(PicoSOAPRequestOperation *operation, id<PicoBindable> responseObject) {
         if (success) {
             success(responseObject);
         }
     } failure:^(PicoSOAPRequestOperation *operation, NSError *error, id<PicoBindable> soapFault) {
         if (failure) {
             failure(error, soapFault);
         }
     }];
}


@end