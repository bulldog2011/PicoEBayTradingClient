// Generated by xsd compiler for ios/objective-c
// DO NOT CHANGE!

#import <Foundation/Foundation.h>

/**
 @file
 
 Indicates the field and direction (ascending or
 descending) by which to sort a returned list of items.
 
 
 @ingroup EBayAPIInterface
*/

/**
 
 Sort by Item ID (ascending).
 
*/
extern NSString *const Trading_ItemSortTypeCodeType_ITEM_ID;

/**
 
 Sort by price (ascending).
 
*/
extern NSString *const Trading_ItemSortTypeCodeType_PRICE;

/**
 
 Sort by start price (ascending).
 
*/
extern NSString *const Trading_ItemSortTypeCodeType_START_PRICE;

/**
 
 Sort by item title (ascending).
 
*/
extern NSString *const Trading_ItemSortTypeCodeType_TITLE;

/**
 
 Sort by number of bids on the item (ascending).
 
*/
extern NSString *const Trading_ItemSortTypeCodeType_BID_COUNT;

/**
 
 Sort by quantity (ascending).
 
*/
extern NSString *const Trading_ItemSortTypeCodeType_QUANTITY;

/**
 
 Sort by listing start time (ascending).
 
*/
extern NSString *const Trading_ItemSortTypeCodeType_START_TIME;

/**
 
 Sort by listing end time (ascending).
 
*/
extern NSString *const Trading_ItemSortTypeCodeType_END_TIME;

/**
 
 Sort by the seller's user ID, in alphabetical order.
 
*/
extern NSString *const Trading_ItemSortTypeCodeType_SELLER_USER_ID;

/**
 
 Sort by the time left for the item's listing,
 in ascending order: active items, good-til-cancelled items,
 and completed items.
 
*/
extern NSString *const Trading_ItemSortTypeCodeType_TIME_LEFT;

/**
 
 Sort by listing duration (ascending).
 
*/
extern NSString *const Trading_ItemSortTypeCodeType_LISTING_DURATION;

/**
 
 Sort by listing type (ascending).
 
*/
extern NSString *const Trading_ItemSortTypeCodeType_LISTING_TYPE;

/**
 
 Sort by current price (ascending).
 
*/
extern NSString *const Trading_ItemSortTypeCodeType_CURRENT_PRICE;

/**
 
 Sort by reserve price (ascending).
 
*/
extern NSString *const Trading_ItemSortTypeCodeType_RESERVE_PRICE;

/**
 
 Sort by maximum bid price (ascending).
 
*/
extern NSString *const Trading_ItemSortTypeCodeType_MAX_BID;

/**
 
 Sort by number of bidders (ascending).
 
*/
extern NSString *const Trading_ItemSortTypeCodeType_BIDDER_COUNT;

/**
 
 Sort by the user ID of the highest bidder (ascending).
 
*/
extern NSString *const Trading_ItemSortTypeCodeType_HIGH_BIDDER_USER_ID;

/**
 
 Sort by the user ID of the buyer (ascending).
 
*/
extern NSString *const Trading_ItemSortTypeCodeType_BUYER_USER_ID;

/**
 
 Sort by the buyer's postal code (ascending).
 
*/
extern NSString *const Trading_ItemSortTypeCodeType_BUYER_POSTAL_CODE;

/**
 
 Sort by the buyer's email address, in alphabetical order.
 
*/
extern NSString *const Trading_ItemSortTypeCodeType_BUYER_EMAIL;

/**
 
 Sort by the seller's email address, in alphabetical order.
 
*/
extern NSString *const Trading_ItemSortTypeCodeType_SELLER_EMAIL;

/**
 
 Sort by total price (ascending).
 
*/
extern NSString *const Trading_ItemSortTypeCodeType_TOTAL_PRICE;

/**
 
 Sort by the number of items being watched (ascending). The WatchCount of an item is the number of watches that buyers have placed on an item using their eBay accounts.
 
*/
extern NSString *const Trading_ItemSortTypeCodeType_WATCH_COUNT;

/**
 
 Sort by the number of Best Offers (ascending).
 
*/
extern NSString *const Trading_ItemSortTypeCodeType_BEST_OFFER_COUNT;

/**
 
 Sort by the number of questions (ascending).
 
*/
extern NSString *const Trading_ItemSortTypeCodeType_QUESTION_COUNT;

/**
 
 Sort by the cost indicated for shipping (ascending).
 
*/
extern NSString *const Trading_ItemSortTypeCodeType_SHIPPING_SERVICE_COST;

/**
 
 Sort by type of feedback received, positive, negative, or neutral.
 In ascending order - negative, neutral, positive.
 
*/
extern NSString *const Trading_ItemSortTypeCodeType_FEEDBACK_RECEIVED;

/**
 
 Sort by type of feedback received, positive, negative, or neutral.
 In ascending order - negative, neutral, positive.
 
*/
extern NSString *const Trading_ItemSortTypeCodeType_FEEDBACK_LEFT;

/**
 
 Sort by user ID, in alphabetical order.
 
*/
extern NSString *const Trading_ItemSortTypeCodeType_USER_ID;

/**
 
 Sort by the number of items sold (ascending).
 
*/
extern NSString *const Trading_ItemSortTypeCodeType_QUANTITY_SOLD;

/**
 
 Sort items with Best Offers first.
 
*/
extern NSString *const Trading_ItemSortTypeCodeType_BEST_OFFER;

/**
 
 Sort by the number of items available (ascending).
 
*/
extern NSString *const Trading_ItemSortTypeCodeType_QUANTITY_AVAILABLE;

/**
 
 Sort by the number of items purchased (ascending).
 
*/
extern NSString *const Trading_ItemSortTypeCodeType_QUANTITY_PURCHASED;

/**
 
 Sort by the platform on which the item was won (eBay items last).
 
*/
extern NSString *const Trading_ItemSortTypeCodeType_WON_PLATFORM;

/**
 
 Sort by the platform on which the item was sold (eBay items last).
 
*/
extern NSString *const Trading_ItemSortTypeCodeType_SOLD_PLATFORM;

/**
 
 Sort by the duration of the listing (descending).
 
*/
extern NSString *const Trading_ItemSortTypeCodeType_LISTING_DURATION_DESCENDING;

/**
 
 Sort by the listing type (descending).
 
*/
extern NSString *const Trading_ItemSortTypeCodeType_LISTING_TYPE_DESCENDING;

/**
 
 Sort by the current price of the listed item (descending).
 
*/
extern NSString *const Trading_ItemSortTypeCodeType_CURRENT_PRICE_DESCENDING;

/**
 
 Sort by the listing's reserve price (descending).
 
*/
extern NSString *const Trading_ItemSortTypeCodeType_RESERVE_PRICE_DESCENDING;

/**
 
 Sort by the highest bid on the item (descending).
 
*/
extern NSString *const Trading_ItemSortTypeCodeType_MAX_BID_DESCENDING;

/**
 
 Sort by number of bidders (descending).
 
*/
extern NSString *const Trading_ItemSortTypeCodeType_BIDDER_COUNT_DESCENDING;

/**
 
 Sort by the user ID of the highest bidder (descending).
 
*/
extern NSString *const Trading_ItemSortTypeCodeType_HIGH_BIDDER_USER_ID_DESCENDING;

/**
 
 Sort by the user ID of the buyer, in reverse
 alphabetical order.
 
*/
extern NSString *const Trading_ItemSortTypeCodeType_BUYER_USER_ID_DESCENDING;

/**
 
 Sort by the buyer's postal code, in descending
 order.
 
*/
extern NSString *const Trading_ItemSortTypeCodeType_BUYER_POSTAL_CODE_DESCENDING;

/**
 
 Sort by the buyer's email address, in
 reverse alphabetical order.
 
*/
extern NSString *const Trading_ItemSortTypeCodeType_BUYER_EMAIL_DESCENDING;

/**
 
 Sort by the seller's email address,
 in reverse alphabetical order.
 
*/
extern NSString *const Trading_ItemSortTypeCodeType_SELLER_EMAIL_DESCENDING;

/**
 
 Sort by the total price of the order, (descending).
 
*/
extern NSString *const Trading_ItemSortTypeCodeType_TOTAL_PRICE_DESCENDING;

/**
 
 Sort by watch count (descending).
 
*/
extern NSString *const Trading_ItemSortTypeCodeType_WATCH_COUNT_DESCENDING;

/**
 
 Sort by number of questions (descending).
 
*/
extern NSString *const Trading_ItemSortTypeCodeType_QUESTION_COUNT_DESCENDING;

/**
 
 Sort by the cost of shipping (descending).
 
*/
extern NSString *const Trading_ItemSortTypeCodeType_SHIPPING_SERVICE_COST_DESCENDING;

/**
 
 Sort by type of feedback received, positive, negative, or neutral.
 In descending order - positive, neutral, negative.
 
*/
extern NSString *const Trading_ItemSortTypeCodeType_FEEDBACK_RECEIVED_DESCENDING;

/**
 
 Sort by type of feedback received, positive, negative, or neutral.
 In descending order - positive, neutral, negative.
 
*/
extern NSString *const Trading_ItemSortTypeCodeType_FEEDBACK_LEFT_DESCENDING;

/**
 
 Sort by user ID, in descending order.
 
*/
extern NSString *const Trading_ItemSortTypeCodeType_USER_ID_DESCENDING;

/**
 
 Sort by the number of items sold, in descending order.
 
*/
extern NSString *const Trading_ItemSortTypeCodeType_QUANTITY_SOLD_DESCENDING;

/**
 
 Sort items by the number of Best Offers on an item, in descending order.
 
*/
extern NSString *const Trading_ItemSortTypeCodeType_BEST_OFFER_COUNT_DESCENDING;

/**
 
 Sort items by the number there are available, in descending order.
 
*/
extern NSString *const Trading_ItemSortTypeCodeType_QUANTITY_AVAILABLE_DESCENDING;

/**
 
 Sort items by the number that have been purchased, in descending order.
 
*/
extern NSString *const Trading_ItemSortTypeCodeType_QUANTITY_PURCHASED_DESCENDING;

/**
 
 Sort items with Best Offers last.
 
*/
extern NSString *const Trading_ItemSortTypeCodeType_BEST_OFFER_DESCENDING;

/**
 
 Sort by Item ID (descending).
 
*/
extern NSString *const Trading_ItemSortTypeCodeType_ITEM_ID_DESCENDING;

/**
 
 Sort by price (descending).
 
*/
extern NSString *const Trading_ItemSortTypeCodeType_PRICE_DESCENDING;

/**
 
 Sort by start price (descending).
 
*/
extern NSString *const Trading_ItemSortTypeCodeType_START_PRICE_DESCENDING;

/**
 
 Sort by item title (descending).
 
*/
extern NSString *const Trading_ItemSortTypeCodeType_TITLE_DESCENDING;

/**
 
 Sort by number of bids on the item (descending).
 
*/
extern NSString *const Trading_ItemSortTypeCodeType_BID_COUNT_DESCENDING;

/**
 
 Sort by the quantity of items sold (descending).
 
*/
extern NSString *const Trading_ItemSortTypeCodeType_QUANTITY_DESCENDING;

/**
 
 Sort by listing start time (descending).
 
*/
extern NSString *const Trading_ItemSortTypeCodeType_START_TIME_DESCENDING;

/**
 
 Sort by listing end time (descending).
 
*/
extern NSString *const Trading_ItemSortTypeCodeType_END_TIME_DESCENDING;

/**
 
 Sort by seller user ID, in reverse alphabetical order.
 
*/
extern NSString *const Trading_ItemSortTypeCodeType_SELLER_USER_ID_DESCENDING;

/**
 
 Sort by time left on the listing, in descending
 order: completed items, good-til-cancelled items,
 and active items.
 
*/
extern NSString *const Trading_ItemSortTypeCodeType_TIME_LEFT_DESCENDING;

/**
 
 Sort by the platform on which the item was won.
 
*/
extern NSString *const Trading_ItemSortTypeCodeType_WON_PLATFORM_DESCENDING;

/**
 
 Sort by the platform on which the item was sold.
 
*/
extern NSString *const Trading_ItemSortTypeCodeType_SOLD_PLATFORM_DESCENDING;

/**
 
 Sort by the lead (emails) count (ascending).
 
*/
extern NSString *const Trading_ItemSortTypeCodeType_LEAD_COUNT;

/**
 
 Sort by the new lead (new emails) count (ascending).
 
*/
extern NSString *const Trading_ItemSortTypeCodeType_NEW_LEAD_COUNT;

/**
 
 Sort by the lead count (descending).
 
*/
extern NSString *const Trading_ItemSortTypeCodeType_LEAD_COUNT_DESCENDING;

/**
 
 Sort by the new contact count (descending).
 
*/
extern NSString *const Trading_ItemSortTypeCodeType_NEW_LEAD_COUNT_DESCENDING;

/**
 
 The pay-per-lead feature is no longer available, so this value is no longer
 applicable.
 
*/
extern NSString *const Trading_ItemSortTypeCodeType_CLASSIFIED_AD_PAY_PER_LEAD_FEE;

/**
 
 The pay-per-lead feature is no longer available, so this value is no longer
 applicable.
 
*/
extern NSString *const Trading_ItemSortTypeCodeType_CLASSIFIED_AD_PAY_PER_LEAD_FEE_DESCENDING;

/**
 
 Reserved for internal or future use.
 
*/
extern NSString *const Trading_ItemSortTypeCodeType_CUSTOM_CODE;
