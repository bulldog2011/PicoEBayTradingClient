// Generated by xsd compiler for ios/objective-c
// DO NOT CHANGE!

#import <Foundation/Foundation.h>
#import "Trading_UploadSiteHostedPicturesRequestType.h"
#import "Trading_Base64BinaryType.h"

@implementation Trading_UploadSiteHostedPicturesRequestType

@synthesize pictureName = _pictureName;
@synthesize pictureSystemVersion = _pictureSystemVersion;
@synthesize pictureSet = _pictureSet;
@synthesize pictureData = _pictureData;
@synthesize pictureUploadPolicy = _pictureUploadPolicy;
@synthesize externalPictureURL = _externalPictureURL;
@synthesize pictureWatermark = _pictureWatermark;
@synthesize extensionInDays = _extensionInDays;

// class meta-data method
// note: this method is only for internal use, DO NOT CHANGE!
+(PicoClassSchema *)getClassMetaData {
    PicoClassSchema *cs = [[PicoClassSchema alloc] initWithXmlName:@"UploadSiteHostedPicturesRequest" nsUri:@"urn:ebay:apis:eBLBaseComponents"];
    [cs autorelease];
    return cs;
}

// property meta-data method
// note: this method is only for internal use, DO NOT CHANGE!
+(NSMutableDictionary *)getPropertyMetaData {
    NSMutableDictionary *map = [NSMutableDictionary dictionary];
    
    PicoPropertySchema *ps = nil;
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"PictureName" propertyName:@"pictureName" type:PICO_TYPE_STRING clazz:nil];
    [map setObject:ps forKey:@"pictureName"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"PictureSystemVersion" propertyName:@"pictureSystemVersion" type:PICO_TYPE_INT clazz:nil];
    [map setObject:ps forKey:@"pictureSystemVersion"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"PictureSet" propertyName:@"pictureSet" type:PICO_TYPE_ENUM clazz:nil];
    [map setObject:ps forKey:@"pictureSet"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"PictureData" propertyName:@"pictureData" type:PICO_TYPE_OBJECT clazz:[Trading_Base64BinaryType class]];
    [map setObject:ps forKey:@"pictureData"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"PictureUploadPolicy" propertyName:@"pictureUploadPolicy" type:PICO_TYPE_ENUM clazz:nil];
    [map setObject:ps forKey:@"pictureUploadPolicy"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT_ARRAY xmlName:@"ExternalPictureURL" propertyName:@"externalPictureURL" type:PICO_TYPE_STRING clazz:nil];
    [map setObject:ps forKey:@"externalPictureURL"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT_ARRAY xmlName:@"PictureWatermark" propertyName:@"pictureWatermark" type:PICO_TYPE_ENUM clazz:nil];
    [map setObject:ps forKey:@"pictureWatermark"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"ExtensionInDays" propertyName:@"extensionInDays" type:PICO_TYPE_INT clazz:nil];
    [map setObject:ps forKey:@"extensionInDays"];
    [ps release];
    
    return map;
}



-(void)dealloc {
    self.pictureName = nil;
    self.pictureSystemVersion = nil;
    self.pictureSet = nil;
    self.pictureData = nil;
    self.pictureUploadPolicy = nil;
    self.externalPictureURL = nil;
    self.pictureWatermark = nil;
    self.extensionInDays = nil;
    [super dealloc];
}

@end
