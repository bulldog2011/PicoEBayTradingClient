// Generated by xsd compiler for ios/objective-c
// DO NOT CHANGE!

#import <Foundation/Foundation.h>
#import "PicoClassSchema.h"
#import "PicoPropertySchema.h"
#import "PicoConstants.h"
#import "PicoBindable.h"


@class Trading_VATRateType;
@class Trading_AddressType;
@class Trading_ShippingDetailsType;
@class Trading_SellingManagerOrderStatusType;
@class Trading_AmountType;
@class Trading_SellingManagerSoldTransactionType;

/**
 
 Contains information about a sale record.
 
 
 @ingroup EBayAPIInterface
*/
@interface Trading_SellingManagerSoldOrderType : NSObject <PicoBindable> {

@private
    NSMutableArray *_sellingManagerSoldTransaction;
    Trading_AddressType *_shippingAddress;
    Trading_ShippingDetailsType *_shippingDetails;
    Trading_AmountType *_cashOnDeliveryCost;
    Trading_AmountType *_totalAmount;
    NSNumber *_totalQuantity;
    Trading_AmountType *_itemCost;
    NSMutableArray *_vatRate;
    Trading_AmountType *_netInsuranceFee;
    Trading_AmountType *_vatInsuranceFee;
    Trading_AmountType *_vatShippingFee;
    Trading_AmountType *_netShippingFee;
    Trading_AmountType *_netTotalAmount;
    Trading_AmountType *_vatTotalAmount;
    Trading_AmountType *_actualShippingCost;
    Trading_AmountType *_adjustmentAmount;
    NSString *_notesToBuyer;
    NSString *_notesFromBuyer;
    NSString *_notesToSeller;
    Trading_SellingManagerOrderStatusType *_orderStatus;
    NSString *_unpaidItemStatus;
    Trading_AmountType *_salePrice;
    NSNumber *_emailsSent;
    NSNumber *_daysSinceSale;
    NSString *_buyerID;
    NSString *_buyerEmail;
    NSNumber *_saleRecordID;
    NSDate *_creationTime;
    Trading_AmountType *_refundAmount;
    NSString *_refundStatus;
    NSMutableArray *_any;

}


/**
 
 Information about one line item in the order.
 
 
 entry type : class Trading_SellingManagerSoldTransactionType
*/

@property (nonatomic, retain) NSMutableArray *sellingManagerSoldTransaction;

/**
 
 Shipping address of a buyer.
 
 
 type : class Trading_AddressType
*/
@property (nonatomic, retain) Trading_AddressType *shippingAddress;

/**
 
 The shipping-related details for an order,
 including flat and calculated shipping costs and shipping insurance costs.
 
 
 type : class Trading_ShippingDetailsType
*/
@property (nonatomic, retain) Trading_ShippingDetailsType *shippingDetails;

/**
 
 The cost of cash-on-delivery.
 
 
 type : class Trading_AmountType
*/
@property (nonatomic, retain) Trading_AmountType *cashOnDeliveryCost;

/**
 
 Total cost in the order.
 
 
 type : class Trading_AmountType
*/
@property (nonatomic, retain) Trading_AmountType *totalAmount;

/**
 
 Total item quantity.
 
 
 type : NSNumber, wrapper for primitive int
*/
@property (nonatomic, retain) NSNumber *totalQuantity;

/**
 
 A SMPro seller can record the cost of the item, as calculated by the seller, in
 this field.
 
 
 type : class Trading_AmountType
*/
@property (nonatomic, retain) Trading_AmountType *itemCost;

/**
 
 Rate of applicable value added tax.
 
 
 entry type : class Trading_VATRateType
*/

@property (nonatomic, retain) NSMutableArray *vatRate;

/**
 
 Total cost of shipping insurance.
 
 
 type : class Trading_AmountType
*/
@property (nonatomic, retain) Trading_AmountType *netInsuranceFee;

/**
 
 Amount of applicable value added tax insurance fee.
 
 
 type : class Trading_AmountType
*/
@property (nonatomic, retain) Trading_AmountType *vatInsuranceFee;

/**
 
 VAT shipping fee.
 
 
 type : class Trading_AmountType
*/
@property (nonatomic, retain) Trading_AmountType *vatShippingFee;

/**
 
 Total shipping fee.
 
 
 type : class Trading_AmountType
*/
@property (nonatomic, retain) Trading_AmountType *netShippingFee;

/**
 
 The seller records in this field a net total amount obtained according to the
 seller's method of calculation. This field is returned for VAT transactions
 only.
 
 
 type : class Trading_AmountType
*/
@property (nonatomic, retain) Trading_AmountType *netTotalAmount;

/**
 
 VAT total amount.
 
 
 type : class Trading_AmountType
*/
@property (nonatomic, retain) Trading_AmountType *vatTotalAmount;

/**
 
 The shipping cost paid by the seller to ship the order line item.
                   <br/><br/>
 For multiple line item orders, it is possible that one order line item will have the shipping cost and the value for the other order line item will be 0.00.
 <br/><br/>
 <span class="tablenote">
                   <strong>Note:</strong> This is different from the field of the same name returned by GetOrders and its related calls, which contains the shipping cost paid by the buyer.
                   </span>
 
 
 type : class Trading_AmountType
*/
@property (nonatomic, retain) Trading_AmountType *actualShippingCost;

/**
 
 Discount, or charge, to which the buyer and seller have agreed.
 If this value is a positive value,
 the amount is the extra money that the buyer pays the seller.
 If this value is a negative value,
 the amount is a discount the seller gives the buyer.
 
 
 type : class Trading_AmountType
*/
@property (nonatomic, retain) Trading_AmountType *adjustmentAmount;

/**
 
 Notes from the seller to the buyer.
 
 
 type : NSString, wrapper for primitive string
*/
@property (nonatomic, retain) NSString *notesToBuyer;

/**
 
 Notes from the buyer to the seller.
 
 
 type : NSString, wrapper for primitive string
*/
@property (nonatomic, retain) NSString *notesFromBuyer;

/**
 
 Notes to self from seller.
 
 
 type : NSString, wrapper for primitive string
*/
@property (nonatomic, retain) NSString *notesToSeller;

/**
 
 Status of the order regarding payment, shipping, feedback, and other
 communications.
 
 
 type : class Trading_SellingManagerOrderStatusType
*/
@property (nonatomic, retain) Trading_SellingManagerOrderStatusType *orderStatus;

/**
 
 The status of an unpaid item regarding final value, state of communications
 between buyer and seller, and the filing of an Unpaid Item.
 
 
 type: string constant in Trading_UnpaidItemStatusTypeCodeType.h
*/
@property (nonatomic, retain) NSString *unpaidItemStatus;

/**
 
 Amount of the accepted offer for the listing.
 
 
 type : class Trading_AmountType
*/
@property (nonatomic, retain) Trading_AmountType *salePrice;

/**
 
 Number of emails sent regarding this order.
 
 
 type : NSNumber, wrapper for primitive int
*/
@property (nonatomic, retain) NSNumber *emailsSent;

/**
 
 Number of days since the sale.
 
 
 type : NSNumber, wrapper for primitive int
*/
@property (nonatomic, retain) NSNumber *daysSinceSale;

/**
 
 The user ID of the buyer.
 
 
 type : NSString, wrapper for primitive string
*/
@property (nonatomic, retain) NSString *buyerID;

/**
 
 The email of the buyer.
 
 
 type : NSString, wrapper for primitive string
*/
@property (nonatomic, retain) NSString *buyerEmail;

/**
 
 The sale record ID. Applicable to Selling Manager users.
 When an item is sold, Selling Manager generates a sale record.
 A sale record contains buyer information, shipping, and other information.
 A sale record is displayed in the Sold view in Selling Manager.
 Each sale record has a sale record ID. In the following calls,
 the value for the sale record ID is in the SellingManagerSalesRecordNumber field:
 GetItemTransactions, GetSellerTransactions, GetOrders, GetOrderTransactions.
 In the Selling Manager calls, the value for the sale record ID is in the
 SaleRecordID field. The sale record ID can be for single or multiple line item orders.
 
 
 type : NSNumber, wrapper for primitive long
*/
@property (nonatomic, retain) NSNumber *saleRecordID;

/**
 
 The sale date.
 
 
 type : NSDate, wrapper for primitive date
*/
@property (nonatomic, retain) NSDate *creationTime;

/**
 
 Amount of the refund issued to the buyer. This field is only returned for a
 DE/AT order subject to the new eBay payment process, and if a refund was
 issued to the buyer.
 
 
 type : class Trading_AmountType
*/
@property (nonatomic, retain) Trading_AmountType *refundAmount;

/**
 
 String value indicating the result of a refund (Success, Failure, Pending)
 to the buyer for an DE/AT order subject to the new eBay payment process.
 
 
 type : NSString, wrapper for primitive string
*/
@property (nonatomic, retain) NSString *refundStatus;

/**
 (public property)
 
 entry type : PicoAnyElement, wrapper for primitive anyelement
*/

@property (nonatomic, retain) NSMutableArray *any;


@end
