// Generated by xsd compiler for ios/objective-c
// DO NOT CHANGE!

#import <Foundation/Foundation.h>
#import "Trading_GetAllBiddersResponseType.h"
#import "Trading_OfferArrayType.h"
#import "Trading_AmountType.h"

@implementation Trading_GetAllBiddersResponseType

@synthesize bidArray = _bidArray;
@synthesize highBidder = _highBidder;
@synthesize highestBid = _highestBid;
@synthesize listingStatus = _listingStatus;

// class meta-data method
// note: this method is only for internal use, DO NOT CHANGE!
+(PicoClassSchema *)getClassMetaData {
    PicoClassSchema *cs = [[PicoClassSchema alloc] initWithXmlName:@"GetAllBiddersResponse" nsUri:@"urn:ebay:apis:eBLBaseComponents"];
    [cs autorelease];
    return cs;
}

// property meta-data method
// note: this method is only for internal use, DO NOT CHANGE!
+(NSMutableDictionary *)getPropertyMetaData {
    NSMutableDictionary *map = [NSMutableDictionary dictionary];
    
    PicoPropertySchema *ps = nil;
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"BidArray" propertyName:@"bidArray" type:PICO_TYPE_OBJECT clazz:[Trading_OfferArrayType class]];
    [map setObject:ps forKey:@"bidArray"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"HighBidder" propertyName:@"highBidder" type:PICO_TYPE_STRING clazz:nil];
    [map setObject:ps forKey:@"highBidder"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"HighestBid" propertyName:@"highestBid" type:PICO_TYPE_OBJECT clazz:[Trading_AmountType class]];
    [map setObject:ps forKey:@"highestBid"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"ListingStatus" propertyName:@"listingStatus" type:PICO_TYPE_ENUM clazz:nil];
    [map setObject:ps forKey:@"listingStatus"];
    [ps release];
    
    return map;
}



-(void)dealloc {
    self.bidArray = nil;
    self.highBidder = nil;
    self.highestBid = nil;
    self.listingStatus = nil;
    [super dealloc];
}

@end
