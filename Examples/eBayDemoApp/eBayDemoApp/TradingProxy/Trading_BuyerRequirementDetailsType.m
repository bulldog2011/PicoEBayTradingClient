// Generated by xsd compiler for ios/objective-c
// DO NOT CHANGE!

#import <Foundation/Foundation.h>
#import "Trading_BuyerRequirementDetailsType.h"
#import "Trading_VerifiedUserRequirementsType.h"
#import "Trading_MaximumItemRequirementsType.h"
#import "Trading_MaximumBuyerPolicyViolationsType.h"
#import "Trading_MaximumUnpaidItemStrikesInfoType.h"

@implementation Trading_BuyerRequirementDetailsType

@synthesize shipToRegistrationCountry = _shipToRegistrationCountry;
@synthesize zeroFeedbackScore = _zeroFeedbackScore;
@synthesize minimumFeedbackScore = _minimumFeedbackScore;
@synthesize maximumItemRequirements = _maximumItemRequirements;
@synthesize linkedPayPalAccount = _linkedPayPalAccount;
@synthesize verifiedUserRequirements = _verifiedUserRequirements;
@synthesize maximumUnpaidItemStrikesInfo = _maximumUnpaidItemStrikesInfo;
@synthesize maximumBuyerPolicyViolations = _maximumBuyerPolicyViolations;
@synthesize any = _any;

// class meta-data method
// note: this method is only for internal use, DO NOT CHANGE!
+(PicoClassSchema *)getClassMetaData {
    return nil;
}

// property meta-data method
// note: this method is only for internal use, DO NOT CHANGE!
+(NSMutableDictionary *)getPropertyMetaData {
    NSMutableDictionary *map = [NSMutableDictionary dictionary];
    
    PicoPropertySchema *ps = nil;
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"ShipToRegistrationCountry" propertyName:@"shipToRegistrationCountry" type:PICO_TYPE_BOOL clazz:nil];
    [map setObject:ps forKey:@"shipToRegistrationCountry"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"ZeroFeedbackScore" propertyName:@"zeroFeedbackScore" type:PICO_TYPE_BOOL clazz:nil];
    [map setObject:ps forKey:@"zeroFeedbackScore"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"MinimumFeedbackScore" propertyName:@"minimumFeedbackScore" type:PICO_TYPE_INT clazz:nil];
    [map setObject:ps forKey:@"minimumFeedbackScore"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"MaximumItemRequirements" propertyName:@"maximumItemRequirements" type:PICO_TYPE_OBJECT clazz:[Trading_MaximumItemRequirementsType class]];
    [map setObject:ps forKey:@"maximumItemRequirements"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"LinkedPayPalAccount" propertyName:@"linkedPayPalAccount" type:PICO_TYPE_BOOL clazz:nil];
    [map setObject:ps forKey:@"linkedPayPalAccount"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"VerifiedUserRequirements" propertyName:@"verifiedUserRequirements" type:PICO_TYPE_OBJECT clazz:[Trading_VerifiedUserRequirementsType class]];
    [map setObject:ps forKey:@"verifiedUserRequirements"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"MaximumUnpaidItemStrikesInfo" propertyName:@"maximumUnpaidItemStrikesInfo" type:PICO_TYPE_OBJECT clazz:[Trading_MaximumUnpaidItemStrikesInfoType class]];
    [map setObject:ps forKey:@"maximumUnpaidItemStrikesInfo"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"MaximumBuyerPolicyViolations" propertyName:@"maximumBuyerPolicyViolations" type:PICO_TYPE_OBJECT clazz:[Trading_MaximumBuyerPolicyViolationsType class]];
    [map setObject:ps forKey:@"maximumBuyerPolicyViolations"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ANY_ELEMENT xmlName:@"any" propertyName:@"any" type:PICO_TYPE_ANYELEMENT clazz:nil];
    [map setObject:ps forKey:@"any"];
    [ps release];
    
    return map;
}



-(void)dealloc {
    self.shipToRegistrationCountry = nil;
    self.zeroFeedbackScore = nil;
    self.minimumFeedbackScore = nil;
    self.maximumItemRequirements = nil;
    self.linkedPayPalAccount = nil;
    self.verifiedUserRequirements = nil;
    self.maximumUnpaidItemStrikesInfo = nil;
    self.maximumBuyerPolicyViolations = nil;
    self.any = nil;
    [super dealloc];
}

@end
