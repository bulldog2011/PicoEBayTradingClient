// Generated by xsd compiler for ios/objective-c
// DO NOT CHANGE!

#import <Foundation/Foundation.h>
#import "Trading_SellingStatusType.h"
#import "Trading_UserType.h"
#import "Trading_PromotionalSaleDetailsType.h"
#import "Trading_AmountType.h"

@implementation Trading_SellingStatusType

@synthesize bidCount = _bidCount;
@synthesize bidIncrement = _bidIncrement;
@synthesize convertedCurrentPrice = _convertedCurrentPrice;
@synthesize currentPrice = _currentPrice;
@synthesize highBidder = _highBidder;
@synthesize leadCount = _leadCount;
@synthesize minimumToBid = _minimumToBid;
@synthesize quantitySold = _quantitySold;
@synthesize reserveMet = _reserveMet;
@synthesize secondChanceEligible = _secondChanceEligible;
@synthesize bidderCount = _bidderCount;
@synthesize listingStatus = _listingStatus;
@synthesize finalValueFee = _finalValueFee;
@synthesize promotionalSaleDetails = _promotionalSaleDetails;
@synthesize adminEnded = _adminEnded;
@synthesize soldAsBin = _soldAsBin;
@synthesize any = _any;

// class meta-data method
// note: this method is only for internal use, DO NOT CHANGE!
+(PicoClassSchema *)getClassMetaData {
    return nil;
}

// property meta-data method
// note: this method is only for internal use, DO NOT CHANGE!
+(NSMutableDictionary *)getPropertyMetaData {
    NSMutableDictionary *map = [NSMutableDictionary dictionary];
    
    PicoPropertySchema *ps = nil;
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"BidCount" propertyName:@"bidCount" type:PICO_TYPE_INT clazz:nil];
    [map setObject:ps forKey:@"bidCount"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"BidIncrement" propertyName:@"bidIncrement" type:PICO_TYPE_OBJECT clazz:[Trading_AmountType class]];
    [map setObject:ps forKey:@"bidIncrement"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"ConvertedCurrentPrice" propertyName:@"convertedCurrentPrice" type:PICO_TYPE_OBJECT clazz:[Trading_AmountType class]];
    [map setObject:ps forKey:@"convertedCurrentPrice"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"CurrentPrice" propertyName:@"currentPrice" type:PICO_TYPE_OBJECT clazz:[Trading_AmountType class]];
    [map setObject:ps forKey:@"currentPrice"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"HighBidder" propertyName:@"highBidder" type:PICO_TYPE_OBJECT clazz:[Trading_UserType class]];
    [map setObject:ps forKey:@"highBidder"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"LeadCount" propertyName:@"leadCount" type:PICO_TYPE_INT clazz:nil];
    [map setObject:ps forKey:@"leadCount"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"MinimumToBid" propertyName:@"minimumToBid" type:PICO_TYPE_OBJECT clazz:[Trading_AmountType class]];
    [map setObject:ps forKey:@"minimumToBid"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"QuantitySold" propertyName:@"quantitySold" type:PICO_TYPE_INT clazz:nil];
    [map setObject:ps forKey:@"quantitySold"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"ReserveMet" propertyName:@"reserveMet" type:PICO_TYPE_BOOL clazz:nil];
    [map setObject:ps forKey:@"reserveMet"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"SecondChanceEligible" propertyName:@"secondChanceEligible" type:PICO_TYPE_BOOL clazz:nil];
    [map setObject:ps forKey:@"secondChanceEligible"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"BidderCount" propertyName:@"bidderCount" type:PICO_TYPE_LONG clazz:nil];
    [map setObject:ps forKey:@"bidderCount"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"ListingStatus" propertyName:@"listingStatus" type:PICO_TYPE_ENUM clazz:nil];
    [map setObject:ps forKey:@"listingStatus"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"FinalValueFee" propertyName:@"finalValueFee" type:PICO_TYPE_OBJECT clazz:[Trading_AmountType class]];
    [map setObject:ps forKey:@"finalValueFee"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"PromotionalSaleDetails" propertyName:@"promotionalSaleDetails" type:PICO_TYPE_OBJECT clazz:[Trading_PromotionalSaleDetailsType class]];
    [map setObject:ps forKey:@"promotionalSaleDetails"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"AdminEnded" propertyName:@"adminEnded" type:PICO_TYPE_BOOL clazz:nil];
    [map setObject:ps forKey:@"adminEnded"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"SoldAsBin" propertyName:@"soldAsBin" type:PICO_TYPE_BOOL clazz:nil];
    [map setObject:ps forKey:@"soldAsBin"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ANY_ELEMENT xmlName:@"any" propertyName:@"any" type:PICO_TYPE_ANYELEMENT clazz:nil];
    [map setObject:ps forKey:@"any"];
    [ps release];
    
    return map;
}



-(void)dealloc {
    self.bidCount = nil;
    self.bidIncrement = nil;
    self.convertedCurrentPrice = nil;
    self.currentPrice = nil;
    self.highBidder = nil;
    self.leadCount = nil;
    self.minimumToBid = nil;
    self.quantitySold = nil;
    self.reserveMet = nil;
    self.secondChanceEligible = nil;
    self.bidderCount = nil;
    self.listingStatus = nil;
    self.finalValueFee = nil;
    self.promotionalSaleDetails = nil;
    self.adminEnded = nil;
    self.soldAsBin = nil;
    self.any = nil;
    [super dealloc];
}

@end
